const VERSION="1.0",d=document;function $(e){return"#"===e.charAt(0)&&!/\s/.test(e)||1===d.querySelectorAll(e).length?d.querySelector(e):0!==d.querySelectorAll(e).length?d.querySelectorAll(e):void 0}function apply(e,a){if(e)if(""+e=="[object NodeList]")for(var r=0;r<e.length;r++)a(e[r]);else a(e)}function dir(){var e=parseInt($("html").getAttribute("cd"))||"../../",a="../";if(isNaN(e))return e;for(var r=1;r<e;r++)a+="../";return a}String.prototype.toLinkCase=function(){return this.toLowerCase().replace(/\s/g,"-")},$("body").innerHTML="<div style=\"background: url('"+dir()+"img/logo1.jpg')\">\t<div style=\"background: url('"+dir()+'img/logo2.jpg\') no-repeat;height: 121px;max-width: 640px"></div></div><div id="navbar" style="background: #5a97f3;color: black;font-weight: bold;overflow: hidden;">\t<h1 style="padding: 9px 33px;border-top: none;margin-top: 0;">'+d.title+'</h1></div><div class="markdown">'+$("body").innerHTML,$(".markdown").innerHTML=$(".markdown").innerHTML.replace(/^\*\s(.+)/gim,"<ul><li>$1</li></ul>").replace(/^\d\.\s(.+)/gim,"<ol><li>$1</li></ol>").replace(/^\-\s(.+)/gim,"<dl><dd>$1</dd></dl>").replace(/<\/ul>(\s+)<ul>/g,"").replace(/<\/ol>(\s+)<ol>/g,"").replace(/<\/dl>(\s+)<dl>/g,"").replace(/^(\w.+)\n==+=/gim,function(e){e=e.replace(/^(\w.+)\n==+=/gim,"$1");return'<h1 id="'+e.toLinkCase()+'"">'+e+"</h1><hr>"}).replace(/^(\w.+)\n--+-/gim,function(e){e=e.replace(/^(\w.+)\n--+-/gim,"$1");return'<h2 id="'+e.toLinkCase()+'"">'+e+"</h2><hr>"}).replace(/\n--+-\n/g,"<hr>\n").replace(/{% hint (\w+) %}([\w\W]*){% endhint %}/g,"<div class='$1'>$2</div>").replace(/{% hint style="(\w+)" %}/g,"<div class=$1>").replace(/{% endhint %}/g,"</div>").replace(/^(\||&gt;)\s(.+)/gim,"<blockquote>$2</blockquote>").replace(/<\/blockquote>(\s+)<blockquote>/g,"<br>").replace(/(\s|\(|>)\*\*\*([\x20-\x29\x2B-\xFF]+)\*\*\*/g,"$1<b><i>$2</i></b>").replace(/(\s|\(|>)\*\*([\x20-\x29\x2B-\xFF]+)\*\*/g,"$1<b>$2</b>").replace(/(\s|\(|>)\*([\x20-\x29\x2B-\xFF]+)\*/g,"$1<i>$2</i>").replace(/(\s|\(|>)\+\+([\x20-\x2A\x2C-\xFF]+)\+\+/,"$1<ins>$2</ins>").replace(/(\s|\(|>)==([\x20-\x3C\x3E-\xFF]+)==/,"$1<mark>$2</mark>").replace(/^#.+\s([\x20-\x22\x24-\xFF].+)/gm,function(e){var n,s=0;return function e(a){if(/^#+\s/.test(a))s++,e(a=a.replace(/^#/,""));else if(0!=s){const r=a.replace(/^\s/,"");n="<h"+s+' id="'+r.toLinkCase()+'">\n\t'+r+"\n</h"+s+">"}else n=a}(e),n}).replace(/(\n^\.\n|(\.|:|\))\n\n(\w|\d|`(``)?!))/g,"$2<br><br>$3").replace(/(\\\n|\\n\w|(\.|:|\))\n(\w|\d|`(``)?!))/g,"$2<br>$3").replace(/\!\[([\x20-\x5A\x5C\x5E-\xFF]+)?\]\(([\x20-\x27\x2A-\xFF]+)(\s"[\w\d\s].+")?\)/g,'<center><img src="$2" alt="$1" title="$3"></center>').replace(/\.md(\)|#)/g,".html$1").replace(/\[([\x20-\x5A\x5C\x5E-\xFF]+)\]\(([\x20-\x27\x2A-\xFF]+)(\s"[\w\d\s].+")?\)/g,'<a href="$2" title="$3">$1</a>').replace(/```(\w+|\n)?\s([\x09-\x5F\x61-\xFF]*)```/g,'<pre class="$1">$2</pre>').replace(/`([\x20-\x5F\x61-\xFF]+)`/g,"<code>$1</code>")+'<hr><p style="line-height: 22px;font-weight: 500;font-size: 14px; color:#8899a8;">CHM EN v'+VERSION+" - by MatiDragon & Seemann with <3 for you</p>";var $firstElementChild=$(".markdown").firstElementChild.style;$firstElementChild["padding-top"]=0,$firstElementChild["margin-top"]=0,$firstElementChild["border-top"]=0,apply($("code"),function(e){e.innerText=e.innerHTML.replace(/=""/g,"").replace(/<\/(\w+|\w)?>/g,""),e.innerHTML=e.innerHTML.replace(/&amp;/g,"&")}),apply($("pre"),function(e){e.innerText=e.innerHTML.replace(/=""/g,"").replace(/<\/(\w+|\w)?>/g,""),e.innerHTML=e.innerText.replace(/<br>/g,"\n"),e.innerHTML=e.innerHTML.replace(/&amp;/g,"&")}),apply($(".sb3"),function(e){e.innerHTML=e.innerHTML.replace(/(\/\/.+)/gm,"<span class=comments>$1</span>").replace(/(\/\*[\x09-.0-¦]*\*\/)/gim,"<span class=comments>$1</span>").replace(/(\{[\x09-z\|~-¦]*\})/gim,"<span class=comments>$1</span>").replace(/\"([\x09-\!#-¦]*)\"/gim,'<span class=strings>"$1"</span>').replace(/\'([!-&(-¦]+)\'/gim,"<span class=strings>'$1'</span>").replace(/(^|\s+)(longstring|shortstring|integer|jump_if_false|thread|create_thread|create_custom_thread|end_thread|name_thread|end_thread_named|if|then|else|hex|end|else_jump|jump|jf|print|const|while|not|wait|repeat|until|break|continue|for|gosub|goto|var|array|of|and|or|to|downto|step|call|return_true|return_false|return|ret|rf|tr|Inc|Dec|Mul|Div|Alloc|Sqr|Random|int|string|float|bool|fade|DEFINE|select_interior|set_weather|set_wb_check_to|nop)\b/gim,"$1<span class=keywords>$2</span>").replace(/(\s+)(\@+\w+|\:+\w+)/gm,"$1<span class=labels>$2</span>").replace(/(\s)([A-Za-z]+\(\))/gm,"$1<span class=commands>$2</span>").replace(/(\[)([\d+]*)(\])/gim,"$1<span class=numbers>$2</span>$3").replace(/([a-fA-F0-9]{4}\:)/gim,"<span class='uppercase'>$1</span>").replace(/\b(\d+)(x|\.)(\w+)\b/gim,"<span class=numbers>$1$2$3</span>").replace(/\b(true|false)\b/gim,"<span class=numbers>$1</span>").replace(/(\s|\-|\,)(?!\$)(\d+)(?!\:|\@)(i)?\b/gim,"$1<span class=numbers>$2$3</span>").replace(/(\#+\w+)/gm,"<span class='models uppercase'>$1</span>").replace(/(^|\s)(Actor|Animation|Attractor|Audio|AudioStream|Blip|Boat|Button|Camera|Car|CarGenerator|CardDecks|Checkpoint|Clock|Component|Credits|Cutscene|Debugger|DecisionMaker|DecisionMakerActor|DecisionMakerGroup|DynamicLibrary|File|Fs|Fx|Game|Gang|Garage|Group|Heli|Hid|ImGui|IniFile|Input|Interior|Key|Marker|Math|Memory|Menu|Model|Mouse|Multiplayer|List|Object|ObjectGroup|Particle|Path|Pickup|Plane|Player|Rampage|Rc|Render|Restart|Screen|ScriptEvent|ScriptFire|Searchlight|Sequence|Shopping|Skip|Sound|Soundtrack|SpecialActor|Sphere|Sprite|Stat|StreamedScript|Streaming|String|StuckCarCheck|Task|Text|Texture|Trailer|Train|Txd|WeaponInfo|Weather|Widget|World|Zone)(\.)(\w+)/gim,"$1<span class=classes>$2</span>$3<span class=commands>$4</span>").replace(/(\w+)(\(.+\)\.)(\w+)/gim,"<span class=classes>$1</span>$2<span class=commands>$3</span>").replace(/(\$\w+|\d+\@)\.([0-9A-Z_a-z]+)/gm,"$1.<span class=commands>$2</span>").replace(/: (\w+)\n/gm,": <span class=classes>$1</span>\n").replace(/\.([0-9A-Z_a-z]+)\n/gm,".<span class=commands>$1</span>\n").replace(/(\{\$)(CLEO|OPCODE|NOSOURCE)(\s\w+\}|\})/gim,"<span class=directives>$1$2$3</span>").replace(/\b(timera|timerb)\b/gim,"<span class=variables>$1</span>").replace(/(\d+)(\@s|\@v|\@)(\:|\s|\n|\]|\.|\,||\))/gm,"<span class=variables>$1$2</span>$3").replace(/(\&amp;\d+)/gim,"<span class=variables>$1</span>").replace(/(\x{00}|s|v)(\$[0-9A-Z_a-z]+)/gm,"<span class=variables>$1$2</span>").replace(/(\t)/gim,"    ")});