<!DOCTYPE HTML>
<html>
<head>
    <title>Циклы</title>
    <meta charset="utf-8">
    <link rel="stylesheet" type="text/css" href="../../style/style2.css">
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
</head><body>

<h2>Циклы</h2>
<p>Цикл - это конструкция, позволяющая выполнять последовательность команд неоднократно. Sanny Builder поддерживает три вида циклов: <a href="#REPEAT..UNTIL">repeat</a>, <a href="#WHILE..END">while</a>, <a href="#FOR..END">for</a>.</p>
<h3><a name="FOR..END"></a>Цикл FOR</h3>

<p>Цикл FOR имеет строго ограниченное количество итераций (повторений).</p>
<p class='syntax'>Синтаксис:<br>
    <span class="reservedword">FOR</span> &lt;переменная цикла&gt; = &lt;начальное значение&gt; <span class="reservedword">TO/DOWNTO</span> &lt;конечное значение&gt; [<span class="reservedword">step</span> = 1]<br>
    &lt;тело цикла&gt;<br>
    <span class="reservedword">END</span></p>

<p><strong>&lt;переменная цикла&gt;</strong> - переменная, используемая в качестве счетчика итераций</p>
<p><strong>&lt;начальное значение&gt;</strong> - начальное значение переменной цикла (любое значение, включая имя модели)</p>
<p><strong>TO/DOWNTO</strong>- увеличивать или уменьшать переменную цикла</p>
<p><strong>&lt;конечное значение&gt;</strong> - конечное значение переменной цикла, при которой он заканчивает свою работу (любое значение, включая имя модели)</p>
<p><strong>&lt;step&gt;</strong> - шаг цикла: опциональная величина, на которую будет увеличиваться или уменьшаться переменная цикла после каждой итерации. По умолчанию равна 1</p>
<p>Пример:</p>
<pre><span class="reservedword">var</span>
<span class="variable">$value</span>: int = <span class="number">0</span>
<span class="variable">$final</span>: int = <span class="number">100</span>
<span class="reservedword">end</span>

<span class="reservedword">FOR</span> <span class="variable">$MyCounter</span> = <span class="number">1</span> <span class="reservedword">to</span> <span class="variable">$final </span>step <span class="number">2</span>
<span class="variable">$value</span> += <span class="variable">$mycounter</span>
<span class="reservedword">end</span></pre>

<p class='note'>Если начальное/конечное значение или шаг цикла указаны в виде переменных, эти переменные будут автоматически объявлены с тем же типом, который есть у переменной цикла. Если переменная цикла не была объявлена с каким-то типом до использования в цикле, она получит тип Integer. Чтобы использовать дробные значения в цикле FOR, объявите переменную цикла с типом Float.</p>
<p>Пример:</p>
<pre><span class="reservedword">var</span>
<span class="variable">$MyCounter</span>: float
<span class="reservedword">end</span>

<span class="reservedword">FOR</span> <span class="variable">$MyCounter</span> = <span class="number">1.0</span> <span class="reservedword">to</span> <span class="variable">$final</span> step <span class="number">2.0</span>
<span class="reservedword">end</span></pre>
<p>Переменные <span class="variable">$MyCounter</span> и <span class="variable">$final</span> обе будут иметь тип Float после цикла.</p>

<h3><a name="WHILE..END"></a>Цикл WHILE</h3>
<p class='syntax'>Синтаксис:<br>
    <span class="reservedword">WHILE</span> &lt;условие цикла&gt;<br>
    &lt;тело цикла&gt;<br>
    <span class="reservedword">END</span></p>
<p>Пример:</p>
<pre><span class="reservedword">while not</span> <span class="model">#AK47</span>.<span class="command">Available</span>
<span class="reservedword">wait</span><span class="number"> 0</span><span class="reservedword">
end</span></pre>
<p>Цикл WHILE работает до тех пор, пока условие цикла истинно. Условие цикла проверяется до первой итерации цикла. Поэтому если условие изначально ложно, цикл не отработает ни разу.</p>
<pre><span class="variable">$var</span> = <span class="number">10</span>

<span class="reservedword">while</span> <span class="variable">$var</span> > <span class="number">11</span>
inc(<span class="variable">$var</span>)
<span class="reservedword">end</span></pre>

<p>Так как условие <span class="variable">$var</span> > <span class="number">11</span> ложно, команда inc(<span class="variable">$var</span>) не выполняется.</p>

<p>Константы <span class="reservedword">true</span> и <span class="reservedword">false</span> могут быть использованы в качестве условия цикла.</p>
<pre><span class="reservedword">while true</span>
&lt;тело цикла&gt;
<span class="reservedword">end</span></pre>
<p>Тело цикла будет выполняться бесконечно до тех пор, пока цикл не будет прерван командой Break.</p>
<pre><span class="reservedword">while false</span>
&lt;тело цикла&gt;
<span class="reservedword">end</span></pre>
<p>Этот цикл будет игнорироваться компилятором, поскольку условие никогда не выполняется.</p>
<p>В текущей версии компилятор принимает только одно условие в качестве условия цикла. Для проверки нескольких условий одновременно, включите их в тело цикла и используйте команды Break и Continue.</p>

<h3><a name="REPEAT..UNTIL"></a>Цикл REPEAT..UNTIL</h3>

<p class='syntax'>Синтаксис:<br>
    <span class="reservedword">REPEAT</span><br>
    &lt;тело цикла&gt;<br>
    <span class="reservedword">UNTIL</span> &lt;условие цикла&gt;</p>
<p>Цикл repeat..until loop работает пока условие цикла не будет истинно. Условие проверяется в конце итерации цикла, поэтому данный цикл будет иметь минимум одну итерацию.</p>

<p>Константы <span class="reservedword">true</span> и <span class="reservedword">false</span> могут быть использованы в качестве условия цикла.</p>

<p><span class="reservedword">repeat</span>..<span class="reservedword">until true</span> - цикл имеет только одну итерацию.</p>
<p><span class="reservedword">repeat</span>..<span class="reservedword">until false</span> - цикл работает бесконечно пока не будет остановлен командой Break</p>
<p>В текущей версии компилятор принимает только одно условие в качестве условия цикла. Для проверки нескольких условий одновременно, включите их в тело цикла и используйте команды Break и Continue.</p>

<h3><a name="CONTINUE"></a><a name="BREAK"></a>Continue и Break</h3>
<p>Если вы хотите пропустить итерацию цикла и перейти к следующей, используйте команду Continue. Команда Break заставляет скрипт немедленно прекратить работу цикла и перейти к команде сразу после него.</p>
<p>Обе эти команды могут быть использованы как параметр в опкоде (например, jf continue) или как отдельная команда.</p>
<p>Пример:</p>
<pre><span class="reservedword">if</span>
    <span class="variable">$currentactor</span>.<span class="command">dead</span>
<span class="reservedword">jf</span> Break <span class="comment">// выход из цикла</span>

<span class="reservedword">if</span>
    <span class="reservedword">not </span><span class="variable">$currentactor</span>.<span class="command">dead</span>
<span class="reservedword">then</span>
   Continue <span class="comment">// переход к следующей итерации</span>
<span class="reservedword">end</span>
</pre>

</body></html>
