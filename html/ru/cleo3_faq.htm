<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<HTML><HEAD><TITLE>FAQ по CLEO 3</TITLE>
<link rel="stylesheet" type="text/css" href="../../style/style.css">
<META http-equiv=Content-Type content="text/html; charset=windows-1251">
<script language="javascript" type="text/javascript" src="img/ru/clipboard.js"></script>
<style type="text/css">
<!--
.style1 {
	font-size: 9pt;
	font-weight: bold;
}
-->
</style>
<SCRIPT language=JavaScript>
<!--
var col

function shw(n)
{qns=document.all("q"+n+"s").style.display="block"}

function hid(n)
{qns=document.all("q"+n+"s").style.display="none"}

function inv(n)
{qn=document.all("q"+n); qns=document.all("q"+n+"s")
if (qns.style.display=="block")
 {qns.style.display="none"}
else
 {qns.style.display="block"}
}

function shall(n)
{var i=1;while(i<=100){if (n==1) shw(i);if (n==2) hid(i);if (n==3) inv(i);i++}}


-->
</SCRIPT>
</HEAD>
<BODY topMargin=0 >
<TABLE
style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BORDER-LEFT: medium none; BORDER-BOTTOM: #c0c0c0 1px solid"
height=121 cellSpacing=0 cellPadding=0 width=640>
  <TBODY>
  <TR>
    <TD vAlign=top><IMG
      src="img/ru/logo2.jpg" width="640" height="121" border=0 class="conthdr" ></TD>
</TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width=640 border=0>
  <TBODY>

  <TD width="100%" height="100%" vAlign=top>
   <DIV><IMG
      src="img/ru/old/CLEO/articles.png" width="640" height="33"></DIV>


      <TABLE cellSpacing=0 cellPadding=0 width="100%">
        <TBODY>
        <TR>
          <TD width=3><IMG height=36
            src="img/ru/mtdl.png" width=5></TD>
          <TD width="571" height=36 vAlign=top
          background="mtdbg.png" class=ntitle>FAQ по CLEO 3</TD>
      <TD width=18><IMG height=36
            src="img/ru/mtdr.png"
      width=20></TD></TR></TBODY></TABLE>
      <TABLE cellSpacing=0 cellPadding=0 width="100%">
        <TBODY>
        <TR>
          <TD width=5 background="ltd.gif"></TD>
          <TD width="597" vAlign=top class=news>
            <p><br><strong>Q: Где можно ознакомиться со списком новых опкодов и значениями параметров?</strong><br>
                <br>
              A:  <a href="Cleo_OP.htm">смотрите здесь</a>. </p>
            <hr>
            <br>
            <strong>Q: Правда ли, что можно добавлять новые скрипты и не начинать новую игру?</strong><br>
            <br>
            A: Да, это является основным нововведением CLEO 3. Подробнее о новом способе скриптинга написано здесь: <a href="Cleo_SCRIPT.htm">CLEO3: скрипты.<br>
            <hr>
            </a><strong>Q: Как использовать в скрипте модель, которая обычно содержится в списке DEFINE OBJECT?</strong><br>
            <br>
            A:  CLEO-скрипты содержатся в scm-файлах без заголовка, т.е. являются  аналогом внешних скриптов из файла script.img. Поэтому в них нет такого  понятия как DEFINE OBJECT. Чтобы использовать такую модель, нужно  указать вместо #имени ее глобальный ID (число). <br>
<br>
Вы можете воспользоваться встроенной в SB <a href="hotkeys.htm#CtrlAltH">функцией поиска</a> ID модели (Ctrl+Alt+H).
<DIV class=NMdiv id=q1  onclick=inv(1) >Также вы можете воспользоваться способом, описанным здесь.</DIV>
<DIV id=q1s style="DISPLAY: none"><BR>
<TABLE cellSpacing=0 cellPadding=0 border=0>
  <TBODY>
  <TR>
    <TD class=ans> <p>
Если вам потребуется в скрипте использовать глобальный ID модели из списка импортирумых моделей (DEFINE OBJECTS), вы можете прочитать его из адреса памяти игры, используя следующую формулу:</p>

<div class="mycode5">MA = -4982 + (ModelID * <span class="general1-number">-7</span>)</div>
<p>Например, чтобы прочитать глобальный ID модели INFO используйте следующий код:</p>
<div  class="imgcursor" align="right"><span class="kbd"><img src="img/ru/ico_cb.gif" alt="Copy to Clipboard" width="16" height="16"  onClick="ClipBoard();"  ></span>
<TEXTAREA ID="holdtext" STYLE="display:none;"></TEXTAREA></div>
<div class="mycode5">
  <pre id="copytext" class="NONS"><span class="general1-variable">0@</span> = <span class="general1-model">#INFO</span>
<span class="general1-variable">0@</span> *= <span class="general1-number">-7</span>
<span class="general1-variable">0@</span> += <span class="general1-number">-4982</span>
0084: <span class="general1-variable">$modelID</span> = <span class="general1-variable">&amp;0</span>(<span class="general1-variable">0@</span>,<span class="general1-number">1i</span>)</pre>
</div>

<p>в modelID будет записано 1239.
<br><br>
вот пример цикла, который выводит по очереди все ID моделей из стандартного майна</p>
<div  class="imgcursor" align="right"><span class="kbd"><img src="img/ru/ico_cb.gif" alt="Copy to Clipboard" width="16" height="16"  onClick="ClipBoard1();"  ></span>
<TEXTAREA ID="holdtext1" STYLE="display:none;"></TEXTAREA></div>
<div class="mycode5"><pre id="copytext1" class="NONS">03C4: set_status_text_to <span class="general1-variable">$modelID</span> <span class="general1-number">0</span> <span class="general1-string">'FEC_NMN'</span>

 <span class="general1-comment">// -4982 + (ModelID * -7)</span>
<span class="general1-reservedword">for</span> <span class="general1-variable">1@</span> = <span class="general1-number">-1</span> <span class="general1-reservedword">downto</span> <span class="general1-number">-388</span> <span class="general1-variable">// #INFO downto #SFCOPDR</span>
 0085: <span class="general1-variable">0@</span> = <span class="general1-variable">1@</span>
 <span class="general1-variable">0@</span> *= <span class="general1-number">-7</span>
 <span class="general1-variable">0@</span> += <span class="general1-number">-4982</span>
 0084: <span class="general1-variable">$modelID</span> = <span class="general1-variable">&0</span>(<span class="general1-variable">0@</span>,<span class="general1-number">1i</span>)
 <span class="general1-reservedword">wait </span><span class="general1-number">1000</span><span class="general1-reservedword">
end</span> <span class="general1-comment">// for</span></pre>
</div></TD></TR></TBODY></TABLE><br><BR>
<DIV class=col onMouseOver="style.color='606060'" onclick=hid(1)
onmouseout="style.color='black'" align="right">
<IMG style="MARGIN: -4px" height=16
src="img/ru/col.gif" width=16>&nbsp;
Свернуть<BR><BR></DIV></DIV>
            <hr>
            <br>
            <strong>Q: Можно ли писать CLEO-скрипты в других редакторах?</strong><br>
            <br>
            A:  Если вы по каким-то причинам не хотите или не можете использовать SB в  качестве редактора скриптов, это не мешает вам писать скрипты для CLEO  3. Для этого вам нужно использовать первый способ написания скрипта, <a href="Cleo_SCRIPT.htm">описанный здесь</a> (извлечение скрипта из script.img).<br>
            <hr>
            <br>
            <strong>Q: Для чего в начале некоторых скриптов стоит опкод 0000?</strong><br>
            <br>
            A:  Это связано с некорректной обработкой скриптовым движком игры "нулевых  переходов" (т.е. переходов на самое начало внешнего скрипта или  миссии). Если скрипт представляет собой сплошной цикл, то этот опкод  0000 предназначен для создания минимального смещения от начала скрипта  (эдакий буфер). Вместо 0000 можно использовать, например, wait 0.<br>
<DIV class=NMdiv id=q2 onclick=inv(2) >Подробнее смотрите здесь.</DIV>
<DIV id=q2s style="DISPLAY: none"><BR>
<TABLE cellSpacing=0 cellPadding=0 border=0>
  <TBODY>
  <TR>
    <TD class=ans >
<p>Скриптовый движок SA имеет один неприятный баг, связанный с метками. Вы не можете осуществить переход из тела внешнего скрипта к его началу, т.е. сделать jump на самую первую метку.</p>
<div class="mycode5"><pre class="NONS">DEFINE SCRIPT TEST_SCR AT <span class="general1-label">@TEST_SCR</span>
...


<span class="general1-comment">//-------------External script (TEST_SCR)---------------</span>

<span class="general1-label">:TEST_SCR</span>
<span class="general1-reservedword">wait </span><span class="general1-number">0</span><span class="general1-reservedword">
jump</span> <span class="general1-label">@TEST_SCR</span> <span class="general1-comment">// этот опкод вызовет ошибку</span></pre>
</div>
<p>
Поэтому, если внешний скрипт представляет собой сплошной цикл, то нужно вставить какой-то опкод в начале, а затем метку для перехода:</p>

<div class="mycode5"><pre class="NONS">DEFINE SCRIPT TEST_SCR AT <span class="general1-label">@TEST_SCR</span>
...


<span class="general1-comment">//-------------External script (TEST_SCR)---------------
</span>
<span class="general1-label">:TEST_SCR</span>
0000: <span class="general1-comment">// можно вставить 03A4</span>

<span class="general1-label">:TEST_SCR_1</span>
<span class="general1-reservedword">wait </span><span class="general1-number">0</span><span class="general1-reservedword">
jump</span> <span class="general1-label">@TEST_SCR_1</span> <span class="general1-comment">// этот опкод будет работать.</span></pre>
</div>
<p>
Тот же баг проявляет себя и в миссиях, но там переход к самому началу почти никогда не требуется.</p></TD></TR></TBODY></TABLE><br><BR>
<DIV class=col onMouseOver="style.color='606060'" onclick=hid(2)
onmouseout="style.color='black'" align="right">
<IMG style="MARGIN: -4px" height=16
src="img/ru/col.gif" width=16>&nbsp;
Свернуть<BR><BR></DIV></DIV>
<hr>
            <br>
            <strong>Q: Почему в CLEO-скриптах нельзя использовать глобальные переменные? Что тогда использовать?</strong><br>
            <br>

<DIV class=NMdiv id=q2 onclick=inv(3) >Подробнее смотрите здесь.</DIV>
<DIV id=q3s style="DISPLAY: none"><BR>
<TABLE cellSpacing=0 cellPadding=0 border=0>
  <TBODY>
  <TR>
    <TD class=ans >
<p>Когда мы компилируем main.scm вместе со всеми миссиями и скриптами, все глобальные переменные получают свой ID (порядковый номер). Часть из них получает ID всегда один и тот же (например, $PLAYER_CHAR компилируется как $2, $PLAYER_ACTOR - $3 и т.п.). Это справедливо для всех глобальных переменных, которые определены в CustomVariables.ini</p>

<p>Этот порядковый номер означает номер ячейки в памяти игры, где хранится значение переменной. Понятное дело, этот номер должен быть уникальным для каждой переменной. Иными словами, каждая переменная должна быть скомпилирована с уникальным ID.</p>

<p>Все остальные переменные компилируются следующих образом. Если имя переменной не найдено в CustomVariables.ini, то она компилируется с номером, который идет следом за наибольшей использованной переменной в скрипте. Звучит сложновато, поэтому пояcню на примере:</p>

<p>Простой скрипт из 2х строк:</p>
<div class="mycode5"><pre class="NONS"><span class="general1-variable">$PLAYER_CHAR</span> = <span class="general1-number">1</span>
<span class="general1-variable">$MYVAR</span> = <span class="general1-number">1</span></pre></div>

<p><span class="general1-variable">$PLAYER_CHAR</span> компилируется как <span class="general1-variable">$2</span>. Значит, переменная <span class="general1-variable">$MYVAR</span>, которая не содержится в CustomVariables.ini и имя которой не числовое, будет скомпилирована как <span class="general1-variable">$3</span>.
(на самом деле там будет не <span class="general1-variable">$3</span>, потому что <span class="general1-variable">$3</span> зарезервировано для <span class="general1-variable">$PLAYER_ACTOR</span>, поэтому <span class="general1-variable">$MYVAR</span> получит первое свободное имя - <span class="general1-variable">$4</span></p>
<p>Другой пример</p>

<div class="mycode5"><pre class="NONS"><span class="general1-variable">$PLAYER_CHAR</span> = <span class="general1-number">1</span>
<span class="general1-variable">$MYVAR</span> = <span class="general1-number">1</span>
<span class="general1-variable">$100</span> = <span class="general1-number">1</span></pre>
</div>

<p>Наибольшая переменная в скрипте теперь <span class="general1-variable">$100</span>, поэтому <span class="general1-variable">$MYVAR</span> станет <span class="general1-variable">$101</span>.</p>

<p>Такой механизм позволяет присвоить каждой переменной свое уникальное имя.</p>

<p>В main.scm все новые переменные получают имена при компиляции начиная с $10948, т.к. $10947 наибольшая переменная, использованная в оригинальном main.scm.</p>

<p>Теперь вернемся к CLEO-скриптам. Каждый раз, когда мы компилируем новый скрипт, компилятор не знает ничегошеньки про состояние main.scm и сколько переменных в нем использовалось. Он именует переменные с нуля каждый раз. Это значит, что если ты сделаешь два скрипта, в которых будет:</p>

<p>в одном скрипте</p>

<div class="mycode5"><pre class="NONS"><span class="general1-variable">$MYVAR</span> = <span class="general1-number">1</span></pre>
</div>

<p>в другом скрипте<p>

<div class="mycode5"><pre class="NONS"><span class="general1-variable">$MYVAR1</span> = <span class="general1-number">1</span></pre></div>
<p> то обе переменные будут скомпилированы как:<br><br>
<div class="mycode5"><pre class="NONS"><span class="general1-variable">$4</span> = <span class="general1-number">1</span></pre></div>
 несмотря на то, что имена у них разные. И каждый раз компилятор будет в новом клео-скрипте именовать переменные, начиная с <span class="general1-variable">$4</span>. Эффект, думаю, ясен. Переменные будут использовать одну и ту же ячейку памяти и менять значения друг друга. Если ты в одном скрипте запишешь актера в <span class="general1-variable">$MYVAR</span>, а в другом в <span class="general1-variable">$MYVAR1</span> = <span class="general1-number">0</span>, то когда первый скрипт обратится к <span class="general1-variable">$MYVAR</span>, он прочитает не актера, а <span class="general1-number">0</span>, т.к. обе переменные используют 4-ю ячейку памяти.</p>

<p>Другая ситуация - это выход за пределы памяти для глобальных переменных. Например, обычный stripped имеет размер памяти для глобальных переменных в 409 ячеек, поскольку наибольшая использованная переменная <span class="general1-variable">$ONMISSION</span> это <span class="general1-variable">$409</span>. Предположим, мы создали клео-скрипт:<br><br>
<div class="mycode5"><pre class="NONS">
<span class="general1-variable">$ONMISSION</span> = <span class="general1-number">1</span>
<span class="general1-variable">$MYVAR</span> = <span class="general1-number">0</span></pre></div>
<p>Как будет скомпилирована переменная <span class="general1-variable">$MYVAR</span>, если вы поняли, о чем я говорил выше ? Правильный ответ <span class="general1-variable">$411</span>. <span class="general1-variable">$ONMISSION</span> это <span class="general1-variable">$409</span>, поэтому переменная должна бы стать <span class="general1-variable">$410</span>, но этот ID уже зарезервирован для <span class="general1-variable">$Help_SprayCan_Shown</span> (см. CustomVariables.ini). Поэтому первый свободный номер это <span class="general1-variable">$411</span>.</p>
<p>Вернемся теперь к stripped. Размер памяти-то у него так и остался - <span class="general1-number">409</span> (если бы <span class="general1-variable">$MYVAR</span> = <span class="general1-number">0</span> компилировалась в майне, то память была бы увеличена до <span class="general1-number">411</span>). Поэтому когда клео-скрипт будет работать с переменной <span class="general1-variable">$MYVAR</span>, ее значения будут читаться и писаться за пределами дозволенной области памяти. В худшем случае, такие переменные будут менять код самого main.scm (опкоды и параметры), что неминуемо повлечет вылет.</p></TD>
  </TR></TBODY></TABLE><br><BR>
<DIV class=col onMouseOver="style.color='606060'" onclick=hid(3)
onmouseout="style.color='black'" align="right">
<IMG style="MARGIN: -4px" height=16
src="img/ru/col.gif" width=16>&nbsp;
Свернуть<BR><BR></DIV></DIV><br>
<DIV class=NMdiv id=q2 onclick=inv(4) >А также здесь.</DIV>
<DIV id=q4s style="DISPLAY: none"><BR>
<TABLE cellSpacing=0 cellPadding=0 border=0>
  <TBODY>
  <TR>
    <TD class=ans >
<p>Глобальные переменные ($) вообще не рекомендуется использовать в CLEO-скриптах, не важно, каким способом их называть. Есть только 2 исключения: 1) это общераспространенные переменные типа $PLAYER_CHAR, $PLAYER_GROUP, $ONMISSION и 2) неиспользуемые переменные типа $30, $56. В любом случае к использованию глобальных переменных нужно подходить очень осторожно, иначе не минуемы различные глюки в игре.</p>

<p>Зато СВОБОДНО, БЕЗ ОГРАНИЧЕНИЙ можно пользоваться локальными переменными. Мало 32-х переменных? Есть масса способов как обойти ограничение (начиная от простой оптимизации, заканчивая использованием scm-функций - 0AB1, 0AB2).</p>

<p>Если неудобно пользоваться локальными переменными из-за их имени (согласен, 1@ не всегда явно выражает смысл переменной), пользуйтесь конструкцией <span class="general1-reservedword">CONST</span>..<span class="general1-reservedword">END</span> Пара строк
<div class="mycode5"><pre class="NONS"><span class="general1-reservedword">const</span>
TRAIN_MODEL = <span class="general1-variable">1@</span>
<span class="general1-reservedword">end</span></pre></div>
позволяет использовать в скрипте слово TRAIN_MODEL, которое на самом деле будет обозначать локальную переменную и компилироваться соответственно. Например,

TRAIN_MODEL = <span class="general1-number">400</span>  - это в переменную <span class="general1-variable">1@</span> записали число <span class="general1-number">400</span>.

И все, больше никаких проблем из-за глобальных переменных.</p></TD>
  </TR></TBODY></TABLE><br><BR>
<DIV class=col onMouseOver="style.color='606060'" onclick=hid(4)
onmouseout="style.color='black'" align="right">
<IMG style="MARGIN: -4px" height=16
src="img/ru/col.gif" width=16>&nbsp;
Свернуть<BR><BR></DIV></DIV>
<br>
            <hr>
            <br>
            <strong>Q: Можно ли в CLEO-скриптах использовать опкоды set_status_text и set_timer?</strong><br>
            <br>

<DIV class=NMdiv id=q2 onclick=inv(5) >Подробнее смотрите здесь.</DIV>
<DIV id=q5s style="DISPLAY: none"><BR>
<TABLE cellSpacing=0 cellPadding=0 border=0>
  <TBODY>
  <TR>
    <TD class=ans >
<p>

В CLEO скриптах в настоящее время нельзя использовать опкоды set_status_text и set_timer, а также сопутствующие им опкоды. Связано это с тем, что эти опкоды требуют задания глобальной переменной, которые, за редким исключением, использовать в CLEO-скриптах нельзя.</p>

<p>Поскольку написать альтернативу этим опкодам довольно непросто, я решил пойти другим путем. Я написал 4 функции, которые работают аналогично опкодам 03C3, 03С4, 014F, 0151, только принимают в качестве переменной - локальную переменную. Это позволяет использовать статус_текст и таймеры в CLEO-скриптах и CLEO-миссиях.</p>

<p><span class="general1-string">Внимание!</span> Для корректной работы функций нужен CLEO 3 v3.0.950 и выше</p>
<p>Функции работают только в GTA: SA v1.0</p>

<div  class="imgcursor" align="right"><span class="kbd"><img src="img/ru/ico_cb.gif" alt="Copy to Clipboard" width="16" height="16"  onClick="ClipBoard2();"  ></span>
<TEXTAREA ID="holdtext2" STYLE="display:none;"></TEXTAREA></div>
<div class="mycode5">
  <pre id="copytext2" ><span class="general1-label">:AddStatusText</span>
0AB1: call_scm_func <span class="general1-label">@__VarToOffset</span> <span class="general1-number">1</span> <span class="general1-variable">0@ 0@</span>
0AB1: call_scm_func <span class="general1-label">@__LabelToOffset</span> <span class="general1-number">1</span> <span class="general1-variable">2@ 2@</span>
0AA6: call_method <span class="general1-number">0x0044CDA0</span> struct <span class="general1-number">0x00BA1788</span> num_params <span class="general1-number">4</span> pop <span class="general1-number">0</span> ( LINE = <span class="general1-variable">3@</span> GXT = <span class="general1-variable">2@</span> TYPE = <span class="general1-variable">1@</span> VARNUMBER = <span class="general1-variable">0@</span> )
0AB2: ret <span class="general1-number">0</span>

<span class="general1-label">:RemoveStatusText</span>
0AB1: call_scm_func <span class="general1-label">@__VarToOffset</span> <span class="general1-number">1</span> <span class="general1-variable">0@ 0@</span>
0AA6: call_method <span class="general1-number">0x0044CE80</span> struct <span class="general1-number">0x00BA1788</span> num_params <span class="general1-number">1</span> pop <span class="general1-number">0</span> ( VARNUMBER = <span class="general1-variable">0@</span> )
0AB2: ret <span class="general1-number">0</span>

<span class="general1-label">:SetTimer</span>
0AB1: call_scm_func <span class="general1-label">@__VarToOffset</span> <span class="general1-number">1</span> <span class="general1-variable">0@ 0@</span>
0AB1: call_scm_func <span class="general1-label">@__LabelToOffset</span> <span class="general1-number">1</span> <span class="general1-variable">2@ 2@</span>
0AA6: call_method <span class="general1-number">0x0044CD50</span> struct <span class="general1-number">0x00BA1788</span> num_params <span class="general1-number">3</span> pop <span class="general1-number">0</span> ( TYPE = <span class="general1-variable">1@</span> GXT = <span class="general1-variable">2@</span> VARNUMBER = <span class="general1-variable">0@</span> )
0AB2: ret <span class="general1-number">0</span>

<span class="general1-label">:StopTimer</span>
0AB1: call_scm_func <span class="general1-label">@__VarToOffset</span> <span class="general1-number">1</span> <span class="general1-variable">0@ 0@</span>
0AA6: call_method <span class="general1-number">0x0044CE60</span> struct <span class="general1-number">0x00BA1788</span> num_params <span class="general1-number">1</span> pop <span class="general1-number">0</span> ( VARNUMBER = <span class="general1-variable">0@</span> )
0AB2: ret <span class="general1-number">0</span>

<span class="general1-label">:__VarToOffset</span>
0A9F: <span class="general1-variable">1@</span> = current_thread_pointer
0A8E: <span class="general1-variable">2@ </span>= <span class="general1-variable">1@</span> + <span class="general1-variable">0xDC</span> <span class="general1-comment">// mission Flag</span>
0A8D: <span class="general1-variable">2@</span> = read_memory <span class="general1-variable">2@</span> size <span class="general1-number">1</span> virtual_protect <span class="general1-number">0</span>
<span class="general1-reservedword">if</span>
    <span class="general1-variable">2@</span> == <span class="general1-number">1</span>
<span class="general1-reservedword">then</span>
    <span class="general1-variable">1@</span> = <span class="general1-number">0x00A48960</span> <span class="general1-comment">// mission locals</span>
<span class="general1-reservedword">else</span>
    <span class="general1-variable">1@</span> += <span class="general1-number">0x3C</span>
<span class="general1-reservedword">end</span>
<span class="general1-variable">0@</span> *= <span class="general1-number">4</span>
005A: <span class="general1-variable">1@</span> += <span class="general1-variable">0@</span> <span class="general1-comment">// address of the local variable </span>
<span class="general1-variable">1@</span> -= <span class="general1-number">0xA49960</span>
0AB2: ret <span class="general1-number">1</span> <span class="general1-variable">1@</span>

<span class="general1-label">:__LabelToOffset</span>
<span class="general1-reservedword">if</span>
    <span class="general1-variable">0@</span> == <span class="general1-number">0</span>
<span class="general1-reservedword">then</span>
    0AB2: ret <span class="general1-number">1 0</span>
<span class="general1-reservedword">end</span>
0A9F: <span class="general1-variable">1@</span> = current_thread_pointer
<span class="general1-variable">1@</span> += <span class="general1-number">0x10</span>
0A8D: <span class="general1-variable">1@</span> = read_memory <span class="general1-variable">1@</span> size <span class="general1-number">4</span> virtual_protect <span class="general1-number">0</span> <span class="general1-comment">// baseIP</span>
0062: <span class="general1-variable">1@</span> -= <span class="general1-variable">0@</span> <span class="general1-comment">// label address</span>
<span class="general1-variable">1@</span> += <span class="general1-number">3</span>
0AB2: ret <span class="general1-number">1</span> <span class="general1-variable">1@</span>

<span class="general1-label">:StatusText</span>
0900: <span class="general1-string">'BB_19'</span>
0000:</pre>
</div>

<p>Вот эти 4 функции.</p>

<p>1. <span class="general1-reservedword">AddStatusText</span> эмулирует опкод<br> 03C4: set_status_text <span class="general1-variable">$BEEFYBARON_SCORE</span> type <span class="general1-number">0</span> GXT <span class="general1-string">'ZER2_43'</span>.</p>

<p>Пример использования:</p>

<div class="mycode5"><pre>0AB1: call_scm_func <span class="general1-label">@AddStatusText</span> <span class="general1-number">4</span> VARNUMBER = <span class="general1-number">33</span> TYPE = <span class="general1-number">0</span> GXT = <span class="general1-label">@StatusText</span> LINE = <span class="general1-number">3</span></pre></div>

<p><span class="general1-reservedword">Параметры:</span> VARNUMBER = <span class="general1-number">33</span> - это номер локальной переменной, значение которой будет выведено (т.е. <span class="general1-variable">33@</span>)</p>

<p>TYPE = <span class="general1-number">0</span> - как и в 03С4 тип статуса: полоска (1) или число (0).</p>

<p>GXT = <span class="general1-label">@StatusText</span> - это основное отличие от опкода. Напрямую передать строку в функцию нельзя (также как и в новый поток, например). Поэтому мы передаем метку, на которой стоит опкод 0900  с нужным текстом (GXT) (в данном случае 0900: <span class="general1-string">'BB_19'</span>). Можно добавить несколько подряд опкодов 0900, каждый со своим GXT и своей меткой, и передавать в функцию нужную метку. Надеюсь, с этим проблем не возникнет.<br>
Можно вместо метки написать <span class="general1-number">0</span>, тогда будет выводиться только число, без текста слева.</p>

<p>LINE = <span class="general1-number">3</span> - номер строки, на которой появится статус. Если равно <span class="general1-number">0</span>, то статус добавится к первой свободной строке.</p>



<p>2. <span class="general1-reservedword">RemoveStatusText</span> эмулирует опкод 0151: remove_status_text <span class="general1-variable">$1924</span></p>

<p>Пример использования:</p>

<div class="mycode5"><pre class="NONS">0AB1: call_scm_func <span class="general1-label">@RemoveStatusText</span> <span class="general1-number">1</span> VARNUMBER = <span class="general1-number">33</span></pre>
</div>

<p>Параметр только один - номер локальной переменной, которая использовалась в AddStatusText.</p>



<p>3. <span class="general1-reservedword">SetTimer</span> эмулирует опкод 03C3: set_timer_to <span class="general1-variable">$1923</span> type <span class="general1-number">1</span> GXT <span class="general1-string">'BB_19'</span></p>

<p>Пример использования:</p>

<div class="mycode5"><pre class="NONS">0AB1: call_scm_func <span class="general1-label">@SetTimer</span> <span class="general1-number">3</span> VARNUMBER = <span class="general1-number">1</span> TYPE = <span class="general1-number">1</span> GXT = <span class="general1-label">@StatusText</span></pre></div>

<p>Параметры VARNUMBER и GXT аналогичны AddStatusText. Параметр TYPE означает вид таймера: увеличивающийся или уменьшающийся.</p>



<p>4. <span class="general1-reservedword">StopTimer</span> эмулирует 014F: stop_timer <span class="general1-variable">$1923</span></p>

<p>Пример использования:</p>

<div class="mycode5"><pre class="NONS">0AB1: call_scm_func <span class="general1-label">@StopTimer</span> <span class="general1-number">1</span> VARNUMBER = <span class="general1-number">1</span></pre>
</div>

<p><span class="general1-reservedword">Параметр</span> - номер локальной переменной, которая использовалась в SetTimer.</p>
<p>Поскольку это лишь эмуляция настоящих опкодов, все ограничения сохраняются (1 таймер и 4 статуса).</p>


<p>Чтобы использовать эти функции, нужно скопировать их без изменений в ваш скрипт, изменить или добавить нужные GXT-ключи, и вызывать соответствующую функцию.</p>



<p>Вот пример скрипта, который в течение 10 секунд показывает состояние переменной 33@ (т.е. таймера)
<a href="http://cleo.sannybuilder.com/scripts/status_text.cs" target="_blank">http://cleo.sannybuilder.com/scripts/status_text.cs</a></p></TD>
  </TR></TBODY></TABLE><br><BR>
<DIV class=col onMouseOver="style.color='606060'" onclick=hid(5)
onmouseout="style.color='black'" align="right">
<IMG style="MARGIN: -4px" height=16
src="img/ru/col.gif" width=16>&nbsp;
Свернуть<BR><BR></DIV></DIV>
<hr>
            <br>
            <strong>У меня есть код CLEO-скрипта, как получить из него .cs-файл?</strong><br>
            <br>
            A: Для этого понадобится программа Sanny Builder 3.03 и выше (найти можно на этом же сайте). Скачайте ее, установите. Запустите, зайдите в опции (F10), укажите путь к папке игры. Теперь нажмите Файл-Создать (Ctrl+N), копируйте весь скрипт в окно редактора (начиная со слова <span class="general1-directive">{$CLEO}</span>) и сохраните полученный текстовый файл. После этого нажмите F7. Если все прошло успешно, в папке игры в папке CLEO должен появиться новый .cs-файл. Если возникли ошибки при компиляции, попытайтесь исправить их, следуя советам из справки (она на русском языке!).<br></TD>
          <TD width="5"
        background="rtd.gif"></TD>
      </TR></TBODY></TABLE>
      <TABLE cellSpacing=0 cellPadding=0 width="100%">
        <TBODY>
        <TR>
          <TD width=5><IMG height=20
            src="img/ru/mtdlbot.png" width=5 border=0></TD>
          <TD align=left
            background="mtdbgbot.png"></TD>
          <TD class=ninfo align=right
          background="mtdbgbot.png">&nbsp;
            </TD>
          <TD width=5><IMG height=20
            src="img/ru/mtdrbot.png" width=5
        border=0></TD></TR></TBODY></TABLE></DIV>
<BR><BR></TD></TR><td width="100%"></TBODY></TABLE>
</TABLE></body></html>
