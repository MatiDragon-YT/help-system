DEFINE OBJECTS 0 
DEFINE MISSIONS 1 
DEFINE MISSION 0 at @MyMission 
DEFINE EXTERNAL_SCRIPTS -1 // Use -1 to not write AAA script 
DEFINE UNKNOWN_EMPTY_SEGMENT 0 
DEFINE UNKNOWN_THREADS_MEMORY 0 

// -------------------- 
// THE STRIPPED MAIN THREAD 
// contains initial info 
// -------------------- 
thread 'Main' 
var 
$PLAYER_CHAR: Player 
end // var 
01F0: set_max_wanted_level_to 6 
set_wb_check_to 0 
00C0: set_current_time 8 0 
04E4: unknown_refresh_game_renderer_at 2488.5601 -1666.84 
Camera.SetAtPos(2488.5601, -1666.84, 13.38) 
$PLAYER_CHAR = Player.Create(#NULL, 2488.5601, -1666.84, 13.38) 
$PLAYER_ACTOR = Actor.EmulateFromPlayer($PLAYER_CHAR) 
Camera.SetBehindPlayer 
set_weather 0 
wait 0 ms 
$PLAYER_CHAR.SetClothes("PLAYER_FACE", "HEAD", Head) 
$PLAYER_CHAR.SetClothes("JEANSDENIM", "JEANS", Legs) 
$PLAYER_CHAR.SetClothes("SNEAKERBINCBLK", "SNEAKER", Shoes) 
$PLAYER_CHAR.SetClothes("VEST", "VEST", Torso) 
$PLAYER_CHAR.Build 
$PLAYER_CHAR.CanMove = True 
fade 1 (out) 0 ms 
select_interior 0 
0629: change_stat 181 (islands unlocked) to 4 
016C: restart_if_wasted at 2027.77 -1420.52 15.99 angle 137.0 unknown 0 
016D: restart_if_busted at 1550.68 -1675.49 14.51 angle 90.0 unknown 0 
0180: set_on_mission_flag_to $ONMISSION
// put your create_thread commands here 

create_thread @MyTrigger 
end_thread 

// put your mission mods here 

:MyTrigger 
thread "MyTrigger" 
$TrigMarker = Marker.CreateIconAndSphere(15, 2489.0591, -1682.2808, 13.3358) 
while $MyMission_Passed == 0 
wait 250 
if Player.Defined($PLAYER_CHAR) 
 then 
  if $ONMISSION == 0 // integer values 
   then 
    if 00FF: actor $PLAYER_ACTOR 0 2489.0591 -1682.2808 13.3358 radius 1.0 1.0 2.0 
     then 
      if Player.Controllable($PLAYER_CHAR) 
       then 
      $ONMISSION = 1 // integer values 
      00BA: text_styled 'INTRO_1' 1000 ms 2 // Big Smoke 
      Marker.Disable($TrigMarker) 
      start_mission MyMission 
      end // if1 
     end // if2 
    end // if3 
  end // if4 
end // while 
end_thread

:MyMission 
thread "MyMission" 
gosub @MissionStart 
if 
  wasted_or_busted 
 then 
  gosub @MissionFailed 
end 
gosub @MissionCleanup 
end_thread 

:MissionStart 
gosub @MissionPassed 
return 

:MissionPassed 
01E3: text_1number_styled 'M_PASSD' 0 5000 ms 1 // MISSION PASSED! 
$MyMission_Passed = 1 
return 

:MissionFailed 
00BA: text_styled 'M_FAIL' 5000 ms 1 // ~r~MISSION FAILED! 
return 

:MissionCleanup 
$ONMISSION = 0 // integer values 
mission_cleanup 
return 