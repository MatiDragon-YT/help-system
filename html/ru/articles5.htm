<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<HTML><HEAD><TITLE>Основы скриптинга</TITLE>
<link rel="stylesheet" type="text/css" href="../../style/style.css">
<META http-equiv=Content-Type content="text/html; charset=windows-1251">
<script language="javascript" type="text/javascript" src="img/ru/clipboard.js"></script>
</HEAD>
<BODY topMargin=0 >
<TABLE
style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BORDER-LEFT: medium none; BORDER-BOTTOM: #c0c0c0 1px solid"
height=121 cellSpacing=0 cellPadding=0 width=640>
  <TBODY>
  <TR>
    <TD vAlign=top width="100%"><IMG
      src="img/ru/logo2.jpg" width="640" height="121" border=0 class="conthdr" ></TD>
  </TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width=640 border=0>
  <TBODY>

  <TD width="100%" height="100%" vAlign=top>
   <DIV><IMG
      src="img/ru/old/articles/articles.png" width="640" height="33"></DIV>


      <TABLE cellSpacing=0 cellPadding=0 width="100%">
        <TBODY>
        <TR>
          <TD width=5><IMG height=36
            src="img/ru/mtdl.png" width=5></TD>
          <TD class=ntitle vAlign=top
          background="mtdbg.png" height=36> Основы скриптинга</TD>
          <TD width=5><IMG height=36
            src="img/ru/mtdr.png"
      width=20></TD></TR></TBODY></TABLE>
      <TABLE cellSpacing=0 cellPadding=0 width="100%">
        <TBODY>
        <TR>
          <TD width=5 background="ltd.gif"></TD>
          <TD class=news vAlign=top><p>
			В этом учебнике я (Alexander) расскажу вам о всём, что я знаю про скриптинг в GTA San Andreas.<br>
			Итак поехали !!!<br><br>
В тексте вы можете встретить слова в двойных кавычках, кавычки существуют только для удобства
чтения, писать их в контексте билдера не надо !!!<br>
Для скриптинга в SA применяется программа Sanny Builer, дальше просто SB, есть ещё и BW's builder,
но про него я ещё не написал учебник. Всё, что Вы прочтёте относится к SB версии не меньше, чем
2.97. Если вы его ещё не закачали, то берите на <a href="http://www.sannybuilder.com" target="_blank">http://www.sannybuilder.com</a>.<br>
Запустите SB, в меню выберите категорию &quot;Tools&quot;, в ней найдите графу &quot;Options&quot;, кликните на неё.
Появится окно, найдите там опцию &quot;GTA SA directory&quot; и укажите там путь к вашему установленному
SA, когда выбрали, то нажмите &quot;OK&quot;. Нажмите &quot;F5&quot; и выберите, где находится главный файл скрипта -
main.scm. Он лежит в: &quot;Директория GTA SA/data/sript&quot;, следом нажмите &quot;Open&quot;.<br>
Вот он и раскомпилировался, и вы увидели кучу цифр и слов. Весь скрипт состоит из команд. Вся
команда записывается в одну строку. Раньше каждая команда состояла из опкода и параметров.<br>
Например:</p>
	        <div class="mycode5">
009A: <span class="general1-variable">$act</span> = create_actor <span class="general1-number">4</span> <span class="general1-model">#WMYCR</span> at <span class="general1-variable">$x $y $z</span></div>
<p><br>
<span class="codes">009A</span> - это опкод, он показывает, какое  действие должно выполнятся<br>
<span class="general1-variable">$act</span> - это актёр (или просто чувак),<br>
<span class="general1-number">4</span> - это тип актёра, типы описал в главе &quot;Актёры&quot;,<br>
<span class="general1-model">#WMYCR</span> - это модель актёра,<br>
<span class="general1-variable">$x $y $z</span> - это координаты актёра на карте, они должны всегда быть с точкой, т.е. должны быть округлены как минимум до десятых.<br>
009A: <span class="general1-variable">$act</span> = <span class="general1-number">4</span> <span class="general1-model">#WMYCR</span> <span class="general1-variable">$x $y $z</span> - я мог бы написать и так, т.к. только параметры играют роль в
команде с опкодом, а в команде без опкода (о них позже) такого делать нельзя.<br>
Весь раскомпилированный main.scm состоит из thread'ов, и миссий, которые в свою очередь, тоже явл.
thread'ами. Написание миссий - самое сложное в скриптинге. Thread'ы ещё называют потоками. Все
переменные (имена актёров, машин, координаты...) должны начинаться со знака <span class="general1-variable">$</span> (можно использовать
во всём тексте Main'a), или они должны оканчиваться знаком <span class="general1-variable">@</span> (можно использовать только в том
потоке, где объявили), по поводу типов данных всё написано в главе <a href="data_types.htm">&quot; типы данных &quot;</a>.<br>
Сейчас (08.2006) в Sanny преимущественно используется новый тип опкодов без команд. Вот тот - же
самый опкод, что я описал раньше, но теперь под теперешний SB:</p>
<div class="mycode5">
<span class="general1-class">actor</span>.<span class="general1-command">Create</span>(<span class="general1-variable">$act</span>,<span class="general1-number">4</span>,<span class="general1-model">#WMYCR</span>,<span class="general1-variable">$x</span>,<span class="general1-variable">$y</span>,<span class="general1-variable">$z</span>)</div>
<p>
Видите, практически тоже самое, только намного удобнее, вам надо написать только кодовое слово,
типа actor, car или object ... , затем поставить точку, и вы увидите небольшое меню, с действиями<br>
которые можно делать с этим типом предмета.<br>
Потоки состоят из label'ов. Label - это как-бы самостоятельная часть потока, label можно определить
по такому контексту : он стоит один в строке и начинается всегда с двоеточия, название любого
потока определяется по названию его первого label'a.<br>
Чтобы создать поток надо найти строку с текстом create_thread,затем после неё в следующей строке
вставить <span class="general1-reservedword">create_thread</span> <span class="general1-label">@&quot;Название вашего потока&quot;</span>, кавычек не надо. Следом надо найти строку с
текстом -Mission 0- и перед ней написать :<br>
1) Название того скрипта, который вы объявили командой <span class="general1-reservedword">create_thread</span> <span class="general1-label">@</span>.<br>
2) обязательно написать команду wait 0 ,вместо нуля можно написать любое время (в миллисекундах),
после которого пойдёт выполнение вашего потока.<br>
3) Каждый поток должен заканчиваться строкой с текстом <span class="general1-reservedword">end_thread</span> .<br>
Например:<br>
Я нашёл строки, частью которых есть выражение <span class="general1-reservedword">create_thread</span> <span class="general1-label">@</span>, после них вставил строку</p>
<div class="mycode5">
<span class="general1-reservedword">create_thread</span> <span class="general1-label">@Test </span></div>
<p>
Затем нашёл строку <span class="general1-comment">-Mission 0-</span><br>
Выше неё написал</p>
<div class="mycode5">
<span class="general1-label">:Test</span><br>
<span class="general1-reservedword">wait</span> <span class="general1-number">0</span><br>
<br>
<span class="general1-comment">//---------- Тут надо писать то,что делает поток -------------</span><br>
<br>
<span class="general1-reservedword">end_thread</span></div>
<p>
Чтобы использовать актёров, машины, объекты в своём потоке, надо сначала загрузить их модели.<br>
Это делается с помощью нескольких команд:<br>
1) <span class="general1-class">model</span>.<span class="general1-command">load</span>(<span class="general1-model">#WMYCR</span>) , где <span class="general1-model">#WMYCR</span> - модель актёра, которая нужна.<br>
2) <span class="codes">038B: load_requested_models</span>, эта команда загружает ранее объявленные модели (у нас это модель
<span class="general1-model">#WMYCR</span>).<br>
Можно написать сколько угодно <span class="general1-class">model</span>.<span class="general1-command">load</span>(<span class="general1-model">#нужная модель</span>), но после того, как вы объявили нужные
модели всегда надо писать команду <span class="codes">038B: load_requested_models</span>, иначе игра вылетит.<br>
Всегда надо писать проверку на загрузку модели, а то если модель ещё не загрузилась, а вы уже с ней
что-то делаете, то игра вылетит. Вот пример стандартного содержания потока (начало, загрузка моделей, проверка на загруженность, конец):<br>
Как всегда создаём поток (как это делать писалось раньше), а теперь:</p>
<div  class="imgcursor" align="right"><span class="kbd"><img src="img/ru/ico_cb.gif" alt="Copy to Clipboard" width="16" height="16"  onClick="ClipBoard();"  ></span>
<TEXTAREA ID="holdtext" STYLE="display:none;"></TEXTAREA></div>
<div class=mycode5>
<pre id="copytext" class="NON">
<span class="general1-label">:Test</span> <span class="general1-comment">//название потока или его 1-го label'a</span>
<span class="general1-reservedword">wait</span> <span class="general1-number">0</span><span class="general1-comment"> //ждём 0 миллисек.(1 сек.=1000 мсек.)</span>
<span class="general1-class">model</span>.<span class="general1-command">load</span>(<span class="general1-model">#нужная модель № 1</span>)
<span class="general1-class">model</span>.<span class="general1-command">load</span>(<span class="general1-model">#нужная модель № 2</span>)
<span class="general1-class">model</span>.<span class="general1-command">load</span>(<span class="general1-model">#нужная модель № n</span>) <span class="general1-comment">//записываем нужные для потока модели</span>
038B: load_requested_models <span class="general1-comment">//загружаем нужные для потока модели
 </span><br><span class="general1-label">:Test_2</span><span class="general1-comment">   // Это новый label</span>
<span class="general1-reservedword">wait</span> <span class="general1-number">0</span> <span class="general1-comment">//ждём 0 миллисек.</span>
<span class="general1-reservedword">if and</span> <span class="general1-comment">//if and-команда начала условия, все подусловия которого выполняются. </span>
<span class="general1-class">model</span>.<span class="general1-command">Available</span>(<span class="general1-model">#нужная модель № 1</span>) <span class="general1-comment">// Подусловие </span>
<span class="general1-class">model</span>.<span class="general1-command">Available</span>(<span class="general1-model">#нужная модель № 2</span>) <span class="general1-comment">// Подусловие </span>
<span class="general1-class">model</span>.<span class="general1-command">Available</span>(<span class="general1-model">#нужная модель № n</span>) <span class="general1-comment">// Подусловие </span>
<span class="general1-reservedword">jf</span> <span class="general1-label">@Test_2</span> <span class="general1-comment">// jf означ.,что если эти подусл. не выполнились, то
// выполнение потока переходит к началу проверки</span>

<span class="general1-comment">//-- Тут надо писать то, что делает поток --</span>

<span class="general1-class">Model</span>.<span class="general1-command">Destroy</span>(<span class="general1-model">#нужная модель № 1</span>) <span class="general1-comment">// в конце каждого потока надо </span>
<span class="general1-class">Model</span>.<span class="general1-command">Destroy</span>(<span class="general1-model">#нужная модель № 2</span>) <span class="general1-comment">// выгружать модели из памяти, а то они </span>
<span class="general1-class">Model</span>.<span class="general1-command">Destroy</span>(<span class="general1-model">#нужная модель № n</span>) <span class="general1-comment">//там остаются и загрязняют её</span>
<span class="general1-reservedword">end_thread</span> <span class="general1-comment">// Конец потока</span></pre>
</div>
<br>
  По поводу условий всё написано в главе <a href="conditions.htm">&quot;Условия&quot;</a>.<br>
  Чтобы применить всё, что вы написали надо нажать &quot;F7&quot; (компиляция), затем запустить SA, нажав &quot;F8&quot;,
  каждый раз после новой компиляции надо начинать новую игру, если будете грузить свои сохранения,
  то игра в конце загрузки просто выдаст ошибку и вылетит.<br>
  Чтобы определить координаты в игре используется Coords Manager, это часть SB. Если SA запущен, то
  по нажатию &quot;F4&quot;, когда окно SB явл. активным, появится дополнительное окошко в окне SB, в котором
  будут написаны координаты игрока, с помощью Coords Manager'a можно устанавливать координаты игрока, просто введите нужные и нажмите &quot;Set&quot;, и игрок переместится в заданную точку.
</p>			  </TD>
          <TD width=5
        background="rtd.gif"></TD></TR>
        </TBODY></TABLE>
      <TABLE cellSpacing=0 cellPadding=0 width="100%">
        <TBODY>
        <TR>
          <TD width=5><IMG height=20
            src="img/ru/mtdlbot.png" width=5 border=0></TD>
          <TD align=left
            background="mtdbgbot.png"></TD>
          <TD class=ninfo align=right
          background="mtdbgbot.png">&nbsp;
            </TD>
          <TD width=5><IMG height=20
            src="img/ru/mtdrbot.png" width=5
        border=0></TD></TR></TBODY></TABLE></DIV>
</TD></TR><td width="100%"></TBODY></TABLE>
</TABLE></body></html>
