<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<HTML><HEAD><TITLE>CLEO3: скрипты</TITLE>
<link rel="stylesheet" type="text/css" href="../../style/style.css">
<META http-equiv=Content-Type content="text/html; charset=windows-1251">
</HEAD>
<BODY topMargin=0 >
<TABLE
style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BORDER-LEFT: medium none; BORDER-BOTTOM: #c0c0c0 1px solid"
height=121 cellSpacing=0 cellPadding=0 width=640>
  <TBODY>
  <TR>
    <TD vAlign=top><IMG
      src="img/ru/logo2.jpg" width="640" height="121" border=0 class="conthdr" ></TD>
</TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width=640 border=0>
  <TBODY>

  <TD width="100%" height="100%" vAlign=top>
   <DIV><IMG
      src="img/ru/old/CLEO/articles.png" width="640" height="33"></DIV>


      <TABLE cellSpacing=0 cellPadding=0 width="100%">
        <TBODY>
        <TR>
          <TD width=3><IMG height=36
            src="img/ru/mtdl.png" width=5></TD>
          <TD vAlign=top
          background="mtdbg.png" class=ntitle>CLEO3: скрипты</TD>
      <TD width=18><IMG height=36
            src="img/ru/mtdr.png"
      width=20></TD></TR></TBODY></TABLE>
      <TABLE cellSpacing=0 cellPadding=0 width="100%">
        <TBODY>
        <TR>
          <TD width=5 background="ltd.gif"></TD>
          <TD vAlign=top class=news>

	<P>CLEO 3 позволяет добавлять новые скрипты  без необходимости начала новой игры. Строго говоря. для них не имеет значения состояние  вашего main.scm. CLEO-скрипты запускаются и функционируют  отдельно от main.scm.</P>
    <p>Что это дает? Вы можете в любой  момент игры добавить новые скрипты, а также удалить имеющиеся. При этом вам не  требуется редактировать main.scm, а значит пропадают  проблемы с необходимостью начала новой игры, несовместимостью сейвов, <a href="SCMHELPGTALimit.htm">скриптовыми  лимитами</a> и так  далее.</p>
    <p>CLEO-скрипт – это обычный скрипт,  написанный с использованием опкодов в Sanny Builder. Каждый скрипт должен быть выполнен в виде отдельного  файла с расширением .cs  (Custom Script).  Главное требование, которое предъявляется к написанию таких скриптов, это то,  что они должны быть скомпилированы как внешние скрипты. </p>
    <p>Существует несколько способов написания CLEO-скрипта,  способного нормально работать в игре. <br>
Во-первых, вы добавляете в исходник новый <a href="articles30.htm">внешний скрипт</a>, после  этого компилируете, и извлекаете нужный файл из script.img. Этот файл будет  иметь расширение .scm, и вам останется только изменить его на .cs и скопировать  в папку ‘игра\CLEO’.<br>
Второй способ гораздо проще. Создайте новый файл в Sanny  Builder’е, напишите в начале <a href="directives.htm#EXTERNAL">директиву $E</a>, после  этого код скрипта и скомпилируйте. Полученный файл будет точно такой, как если  бы вы извлекли его из script.img. Вам останется только дать ему нужное  расширение .cs и скопировать в папку \CLEO.</p>
    Наконец, самый простой способ. Создайте новый файл, в начале напишите <a href="directives.htm#CLEO">директиву {$CLEO .cs}</a> (или с другим расширением), после этого код скрипта и скомпилируйте.  Файл автоматически будет скопирован в директорию CLEO и будет иметь такое  расширение, которое вы указали в директиве $CLEO (.cs по умолчанию).
    <p>CLEO-скрипты могут использоваться и как  миссии. Процесс компиляции точно такой же, однако итоговый файл должен иметь  расширение .cm (Custom Mission). Для того чтобы  запустить такую миссию, используйте <a href="Cleo_OP.htm#0A94">опкод 0A94</a>. </p>
    <p>Правила, которым вы обязаны  следовать при использовании CLEO 3:</p>
    <ol start="1" type="1">
      <li><span class="general1-reservedword">Один файл – один поток</span>. Каждый CLEO-скрипт должен быть выполнен в       виде отдельного потока, который компилируется в отдельный файл. Если вам       нужно создавать дополнительные потоки для вашего скрипта, используйте       опкоды 004F или <a href="Cleo_OP.htm#0A92">0A92</a>,       в зависимости от того, где находится этот поток: в main.scm или отдельном       cs-файле. </li>
      <li><span class="general1-reservedword">Никогда не используйте опкод 004E в CLEO-скриптах.</span> Они       работают отдельно от обычных потоков, и использование этого опкода вызовет       ошибку. Если вам нужно остановить CLEO-поток, используйте <a href="Cleo_OP.htm#0A93">опкод 0A93</a>.       <span class="general1-reservedword">В CLEO-миссиях       наоборот никогда не используйте опкод 0A93</span>, а для остановки миссии используйте 004E.</li>
	  <li><span class="general1-reservedword">Не используйте в CLEO-скрипте собственные глобальные переменные ($car, $blahblah и т.д.)</span>, иначе скрипт будет работать неправильно. Вы можете использовать только некоторые глобальные переменные (см. ниже).</li>

	  </ol>

    <p>Как уже говорилось, для установки  скрипта достаточно скопировать его в папку ‘игра\CLEO’. Имя файла не имеет значения,  работа с файлами происходит по расширению. Однако имя файла используется при  инициализации CLEO-потока,  чтобы дать ему имя (<span class="general1-reservedword">name_thread</span>) по названию файла  (первые 7 символов). Например, CLEO-поток  в файле showsavescreen будет иметь имя SHOWSAV.<br>
      Для удаления скрипта из игры  просто удалите соответствующий файл.</p>
    <p>Статус CLEO-потоков может  сохраняться и загружаться вместе с обычными потоками. По умолчанию  эти потоки не сохраняются. Сами сейвы  находятся отдельно, в папке CLEO\cleo_saves. Для каждого  слота используется отдельный сейв. В сейве  сохраняются только те CLEO-потоки, для которых   включен флаг сохранения (<a href="Cleo_OP.htm#0A95">опкод 0A95</a>). В сейве сохраняются не только  активные потоки, но и те, которые были завершены (<a href="Cleo_OP.htm#0A93">опкод 0A93</a>), чтобы  предотвратить их повторную загрузку. Если при   последующей загрузке один из сохраненных скриптов не будет найден,  ошибки не будет. Если вы  добавите новый  скрипт, которого нет в сейве, он запустится вместе со всеми и начнет работать  с  начала.</p>
    <p>В целом CLEO-потоки такие же как и обычные  потоки. У них также 32 локальных переменных и 2 таймера. При создании CLEO-потока или CLEO-миссии можно передавать в них до 34 параметров (по  аналогии с опкодом 004F).</p>
    <p>Важный момент, связанный с обменом  данными между CLEO-скриптом  и main.scm. Чтобы пользоваться кодом  из майна, его переменными, потоками, вы должны компилировать CLEO-скрипт как внешний скрипт, а затем  извлекать из script.img. Однако этот способ очень  не рекомендован, поскольку такой скрипт становится весьма чувствительным к  изменению main.scm. <span class="general1-comment"><em>По смыслу, CLEO-скрипты должны быть  самодостаточными и использовать минимум ресурсов главного скм-файла.</em></span> Вы,  однако, можете свободно использовать имена глобальных переменных из файла CustomVariables.ini (например,  $PLAYER_CHAR, $PLAYER_ACTOR, $ONMISSION и  т.д.). <br>Также для обмена данными между  main.scm и CLEO, или между CLEO-скриптами вы можете использовать  CLEO-переменные (см. опкоды 0AB3, 0AB4).</p>
    <p>В комплект CLEO 3 включены примеры простых скриптов  с исходниками.</p>
    <p>Описание примеров CLEO-скриптов:</p>
    <p><strong>test_example.txt</strong><br>
      <br>
      Базовый пример   создания CLEO-скрипта. Смысл его заключается в выводе сообщения при запуске   игры. Для этого используется доп. скрипт ShowTextBox, который показывает   текстбокс на экране. Данный пример может служит основой для вывода тестовых   сообщений в любом моде.<br>
      <br>
      Скрипт срабатывает однократно при запуске игры.   После сохранения-загрузки сообщение появляться не будет (благодаря опкоду   0A95). <span class="general1-command">TXT-файл  (исходник), <a href="examples/test_example.txt" target="_blank">здесь</a>. </span><br>
      <br>
      <strong>showsavescreen.txt</strong><br>
      <br>
      Пример постоянно   работающего скрипта. Представляет собой бесконечный цикл, проверяющий нажатие   кнопки F4. После ее нажатия появляется окно   сохранения. <span class="general1-command">TXT-файл  (исходник), <a href="examples/showsavescreen.txt" target="_blank">здесь</a>.</span> <br>
      <br>
      <strong>CustomMission.txt</strong><br>
      <br>
      Болванка   CLEO-миссии. Если создать скрипт по аналогии с showsavescreen, только вместо   вывода экрана сохранения использовать 0A94, можно запускать эту   миссию.<span class="general1-command"> TXT-файл  (исходник), <a href="examples/CustomMission.txt" target="_blank">здесь</a>.</span> <br>
      <br>
      <br>
      <strong>otbhook.txt</strong><br>
      <br>
      Пример хука. Этот скрипт   проверяет запущена ли миссия OTB (скачки на лошадях), и если да, то повышает   значения ставок. Скрипт предназначен для оригинальной   игры.<span class="general1-command"> TXT-файл  (исходник), <a href="examples/otbhook.txt" target="_blank">здесь</a>.</span> <br>
      <br>
      <br>
      <strong>VCCam.txt</strong><br>
      <br>
      Позаимствовано из мультимода   Capushon’а. Скрипт меняет положение камеры при езде на машине, делая обзор   гораздо удобнее.<span class="general1-command"> TXT-файл  (исходник), <a href="examples/VCCam.txt" target="_blank">здесь</a>.</span> <br>
    </p></TD>
          <TD width="5"
        background="rtd.gif"></TD>
      </TR></TBODY></TABLE>
      <TABLE cellSpacing=0 cellPadding=0 width="100%">
        <TBODY>
        <TR>
          <TD width=5><IMG height=20
            src="img/ru/mtdlbot.png" width=5 border=0></TD>
          <TD align=left
            background="mtdbgbot.png"></TD>
          <TD class=ninfo align=right
          background="mtdbgbot.png">&nbsp;
            </TD>
          <TD width=5><IMG height=20
            src="img/ru/mtdrbot.png" width=5
        border=0></TD></TR></TBODY></TABLE></DIV>
<BR><BR></TD></TR><td width="100%"></TBODY></TABLE>
</TABLE></body></html>
