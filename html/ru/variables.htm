<!DOCTYPE HTML>
<html>
<head>
    <title>Переменные</title>
    <meta charset="utf-8">
    <link rel="stylesheet" type="text/css" href="../../style/style2.css">
    <meta http-equiv="X-UA-Compatible" content="IE=edge" /></head>
<body>

<h2>Переменные</h2>
<p>Переменная - это именновая область памяти, которая хранит определенное значение. Значение переменной может быть прочитано или изменено неограниченное число раз. Существует два вида переменных:</p>

<h3>Глобальные переменные</h3>
<p>Глобальные переменные обозначаются знаком доллара ($) перед именем. Имя глобальной переменной - это любое сочетание букв, цифр и знака нижнего подчеркивания (_)</p>

<p class="note">$variable1 $100 $____</p>
Их значения доступны из любой миссии или потока.

<h3>Локальные переменные</h3>
<p>Локальные переменные обозначаются знаком собаки (@) после имени. Имя локальной переменной может состоять только из цифр</p>
<p class="note">0@ 999@ 56@</p>
<p>Их значения доступны только в пределах одного потока или миссии.</p>

<p>Каждый поток, внешний скрипт, CLEO скрипт имеет ограниченный набор локальных переменных. Этот набор включает в себя переменные от 0@ до 33@ в San Andreas и от 0@ до 17@ в GTA 3 и VC. Миссии в SA имеют больший набор переменных. Он включает в себя переменные от 0@ до 1023@</p>

<h3><a name="VAR_END"></a>Конструкция VAR..END</h3>

<p>Переменные используются в качестве операндов (членов) <a href="ERR_00ST.htm#EXPRESSION">математических и логических выражений</a>. Если правый операнд является числовой константой, Sanny Builder автоматически подбирает опкод для выражения.</p>

<pre><span class="variable">$var</span> = <span class="number">0</span>
<span class="variable">$myarray</span>(<span class="variable">$index</span>, <span class="number">10i</span>) >= <span class="number">150</span></pre></p>

<p>Во многих случаях это будет даже правильнее, потому что часто в таких выражениях скриптеры используют неверные опкоды.</p>

<p>Однако, если в выражении в обоих сторон участвуют переменные, то компилятор не знает, какой именно опкод необходим в данном
    случае. Для разных типов переменных существуют свои опкоды.</p>

<p>Для того чтобы подсказать компилятору тип переменной, она должна быть объявлена через конструкцию <span class="i">VAR..END</span>. Она позволяет объявлять переменные и их типы, для последующего манипулирования ими.</p>

<p class="syntax">Синтаксис:<br>
    <span class="reservedword">var</span><br>&lt;имя переменной&gt;: &lt;новый тип&gt;<br><span class="reservedword">end</span></p>

<p>Например, если обе переменные были объявлены, компилятор правильно обрабатывает выражения без опкодов:</p>

<pre><span class="reservedword">var</span>
<span class="variable">$Var1</span> : Integer
<span class="variable">$Var2 </span>: Integer
<span class="reservedword">end</span>
<span class="variable">$Var1</span> += <span class="variable">$Var2</span> <span class="comment">// опкод 0058</span></pre>

<p><a name="type"></a>Поддерживаются следующие типы переменных:</p>
<ul>
    <li>Integer, Int - переменные целого типа (хранят целочисленные значения)</li>
    <li>Float - переменные дробного типа (хранят дробные значения)</li>
    <li>String, ShortString - переменные, содержащие строковый литерал фиксированной длины (только для массивов, используйте s$, @s для переменных)</li>
    <li>LongString - переменные, содержащие строковый литерал переменной длины (только для массивов, используйте v$, @v для переменных)</li>
    <li>&lt;Имя класса&gt; - любое доступное <a href="classes.htm">имя класса</a></li>
</ul>

<p>Кроме глобальных переменных можно объявлять и локальные переменные.</p>
<p>Но нужно помнить, что в этом случае все такие переменные во всех потоках будут иметь один и тот же тип. Чтобы избежать этого, вы
    можете переобъявлять переменные в каждом потоке:</p>

<pre><span class="reservedword">thread</span> <span class="string">'Food'</span>
<span class="reservedword">var</span>
<span class="variable">10@</span> : Float
<span class="variable">$Var</span> : Float
<span class="reservedword">end</span>
<span class="variable">$var</span> = <span class="number">1</span>
<span class="variable">10@</span> = <span class="variable">$Var</span>
<span class="reservedword">end_thread</span>

<span class="reservedword">thread</span> <span class="string">'Loop'</span>
<span class="reservedword">var</span>
<span class="variable">10@ </span>: Int
<span class="variable">$Var</span> : Int
<span class="reservedword">end</span>
<span class="variable">$var</span> = <span class="number">1</span>
<span class="variable">10@ </span>= <span class="variable">$Var</span>
<span class="reservedword">end_thread</span></pre>

<p>В потоке "Food" 10@ это переменная дробного типа. В потоке "Loop" 10@ - целого типа.</p>

<p>Вы можете переобъявлять	переменные сколько угодно раз.</p>

<h3>Короткая форма объявления</h3>
<p>Начиная с версии 3.2.0 можно объявить переменную используя один из встроенных типов данных (Int, Float, String, LongString).</p>
<p class="syntax">Синтаксис:<br> &lt;тип&gt;&nbsp;&lt;имя переменной&gt;</p>
<pre>int <span class="variable">0@</span> <span class="comment">// 0@ объявлена как переменная целого типа.</span></pre>

<h3>Инициализация переменных</h3>
<p>Также вы можете инициализировать значение переменной сразу при объявлении. Для этого после указания типа поставьте знак = и стартовое значение:</p>
<pre><span class="reservedword">var</span>
<span class="variable">$fVar</span>: float = <span class="number">1.0</span>
<span class="reservedword">end</span></pre>
или
<pre>float <span class="variable">$fVar</span> = <span class="number">1.0</span></pre>
<p>$fVar будет объявлена как переменная дробного типа и одновременно компилятор добавит в скрипт опкод:</p>

<pre>0005: <span class="variable">$fVar</span> = <span class="number">1.0</span></pre>

<p>Инициализация доступна только для переменных, но не массивов.</p>

</body></html>
