<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<HTML><HEAD><TITLE>Меняем игровую память через SCM (San Andreas)</TITLE>
<link rel="stylesheet" type="text/css" href="../../style/style.css">
<META http-equiv=Content-Type content="text/html; charset=windows-1251">
<script language="javascript" type="text/javascript" src="img/ru/clipboard.js"></script>
</HEAD>
<BODY topMargin=0 >
<TABLE
style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BORDER-LEFT: medium none; BORDER-BOTTOM: #c0c0c0 1px solid"
height=121 cellSpacing=0 cellPadding=0 width=640>
  <TBODY>
  <TR>
    <TD vAlign=top width="100%"><IMG
      src="img/ru/logo2.jpg" width="640" height="121" border=0 class="conthdr" ></TD>
</TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width=640 border=0>
  <TBODY>

  <TD width="100%" height="100%" vAlign=top>
   <DIV><IMG
      src="img/ru/old/articles/articles.png" width="640" height="33"></DIV>


      <TABLE cellSpacing=0 cellPadding=0 width="100%">
        <TBODY>
        <TR>
          <TD width=5><IMG height=36
            src="img/ru/mtdl.png" width=5></TD>
          <TD class=ntitle vAlign=top
          background="mtdbg.png" height=36> Меняем игровую память через SCM (San Andreas)</TD>
          <TD width=5><IMG height=36
            src="img/ru/mtdr.png"
      width=20></TD></TR></TBODY></TABLE>
      <TABLE cellSpacing=0 cellPadding=0 width="100%">
        <TBODY>
        <TR>
          <TD width=5 background="ltd.gif"></TD>
          <TD class=news vAlign=top><strong>1.</strong> <br>
Всем известно, что San Andreas поддерживает массивы в SCM. <br>
В общем виде массивы представлены так: <br>
<br>
<div class="mycode5">
&lt;array name&gt;(&lt;index name&gt;,&lt;size&gt;&lt;type&gt;) </div>
<br>
Имя массива и индекса - это переменные, содержащие значения, которые определяют место начала массива (array name) и смещение от этого начала (или номер ячейки в массиве) на определенное число байтов (index name). <br>
<br>
Так вот, например, <span class="codes">$array($index,11i)</span> будет указывать на определенную ячейку памяти, которая рассчитывается следующим образом: <br>
<br>
берется <strong>имя </strong> (подробнее в разделе DMA) переменной <span class="var1">$array</span>, к ней прибавляется <strong>значение </strong> переменной $index, умноженное на размер одной ячейки. <br>
Например, для типа i (integer) размер одной ячейки равен 4 байтам. <br>
<br>
<div class="mycode5">
i,f : 4 байта <br>
s : 8 байтов <br>
v : 16 байтов </div>
<br>
Таким образом, общая формула такова: <br><br>
<div class="mycode5">
cA = aN + (iN * t) </div>
<br>
<span class="var">cA</span> адрес ячейки <br>
<span class="var">aN </span>$array <br>
<span class="var">iN</span> значение $index <br>
<span class="var">t</span> размер ячейки для данного типа <br>
<br>
<strong>2.</strong> <br>
Значение <span class="var">cA (адрес ячейки)</span> - это смещение в main.scm относительно его начала. Все глобальные переменные и глобальные массивы хранятся в теле main.scm в блоке, который идет в самом начале файла (так называемый первый сегмент). Если вы откроете main.scm в хекс-редакторе, вы увидите, что в начале идет очень много нулей. Вот здесь потом и прописываются значения переменных. <br>
<br>
Допустим, <span class="var">aN</span> равно <span class="var1">$8</span>, <span class="var">iN</span> равно <span class="var1">10</span>, а тип массива Integer, т.е. <span class="var">t</span> равно <span class="var1">4</span>. Тогда <span class="var">cA</span> равно <span class="var1">48</span>. Тогда <span class="var">$array($index,11i)</span> прочитает 4 байта из первого сегмента, начиная с 48-го байта от начала. <br>
<br>
<strong>3.</strong> <br>
<strong>DMA</strong>. DMA расшифровывается как Direct Memory Access (прямой доступ к памяти). Относительно скриптинга в GTA, речь идет об использовании прямого доступа к <strong>конкретной </strong> ячейке памяти. Реализуется эта технология путем указания числового имени для глобальной переменной. Например, <span class="var1">$100</span> всегда указывает на сотую ячейку памяти (или четырехсотый байт, т.к. одна ячейка равна 4 байтам) относительно начала первого сегмента SCM. <br>
<br>
А вот куда будет указывать <span class="var1">$var</span> (например), вы заранее знать не можете, т.к. память для переменных с текстовыми именами распределяется уже компилятором. <br>
Правда здесь есть два исключения: <br>
- Вы можете указать компилятору конкретную ячейку памяти для глобальной переменной командой Alloc. <br>
- Переменные из файла CustomVariables.ini всегда имеют определенную ячейку. <br>
<br>
Трансформируем наш пример в DMA: <br>
<br>
<div class="mycode5">
<span class="general1-variable">$9</span> = <span class="general1-number">1</span> <br>
<span class="general1-variable">$10</span>(<span class="general1-variable">$9</span>,<span class="general1-number">11i</span>) </div>
<br>
<br>
<span class="var1">$10</span> это имя массива, которое определяет его позицию в первом сегменте (40-й байт). <span class="general1-variable">$9</span> равно 1 поэтому <span class="var">cA</span> = 40+1*4 = 44. <span class="general1-variable">$10</span>(<span class="general1-variable">$9</span>,<span class="general1-number">11i</span>) читает и пишет значения в диапазоне [44..47] байты SCM. <br>
<br>
Домашнее задание: докажите, что если <span class="general1-variable">$9</span> равно 0, то <span class="general1-variable">$10</span>(<span class="general1-variable">$9</span>,<span class="general1-number">11i</span>) тоже самое что <span class="general1-variable">$10</span>. <br>
<br>
<strong>4.</strong> <br>
<strong>aDMA</strong>. <a name="aDMA">aDMA</a> расшифровывается как Advanced DMA или продвинутый доступ к памяти. <br>
Технология DMA имеет три ограничения: <br>
- нельзя использовать имена <span class="general1-variable">$0</span> и <span class="general1-variable">$1</span>, так как они выходят за пределы первого сегмента SCM. <br>
- использование DMA-переменных влияет на размер первого сегмента, а значит и всего файла. Например, если вы используете в скрипте переменную <span class="general1-variable">$10000</span>, то размер первого сегмента увеличится до катастрофического значения в ~ <span class="codes">40</span> килобайт, даже если у вас во всем файле лишь десяток переменных. <br>
- DMA использует шаг в 4 байта, и вы не имеете доступа к адресам, которые не делятся нацело на 4. Например, вы не можете прочитать [11..14] байты, а только [8..11] - <span class="general1-variable">$2</span> или [12..15] - <span class="general1-variable">$3</span>. <br>
<br>
aDMA лишен этих недостатков. Вы можете использовать любые значения, кроме отрицательных. Реализуется aDMA через тип данных <span class="codes">&amp;.</span> Используется шаг в один байт <br>
Так, переменная <span class="general1-variable">&amp;11</span> будет читать [11..14] байты, &amp;9999999 – [9999999.. 1000002] и т.д. <br>
<br>
<span class="codes">&amp;0</span> прочитает первые 4 байта SCM, которые равны 2147xxxxxx <br>
Домашнее задание: проверьте это <br>
<br>
<div  class="imgcursor" align="right"><span class="kbd"><img src="img/ru/ico_cb.gif" alt="Copy to Clipboard" width="16" height="16"  onClick="ClipBoard();"  ></span>
<TEXTAREA ID="holdtext" STYLE="display:none;"></TEXTAREA></div>
<div class=mycode5>
<pre id="copytext" class="NON">
054C: use_GXT_table <span class="general1-string">'POOL' </span>
01E3: text_1number_styled <span class="general1-string">'NUM'</span> <span class="general1-variable">&amp;0</span> <span class="general1-number">5000</span> ms <span class="general1-number">1</span> <span class="general1-comment">// ~1~</span></pre></div>
<br>
Самое важное, что aDMA не влияет на размер первого сегмента, и вы можете читать/менять значение за его пределами (например код второго сегмента - моделей). <br>
<br>
Однако и DMA и aDMA ограничены в размере: максимальные значения для них равны <span class="general1-variable">$16383</span>, <span class="general1-variable">&amp;65536</span> соответственно. Поэтому доступный диапазон для таких переменных равен 65536. <br>
<br>
<strong>5.</strong> <br>
Возвращаемся к массивам. Как я уже говорил, для расчета конечной ячейки памяти к имени массива (оффсету) прибавляется содержимое индекса * 4. Теперь попробуем поразмыслить, ведь содержимое переменной не ограничено никакими лимитами (кроме естественно предела в 4,294,967,295 для всех 32-битных приложений, к коим относится и GTA). А значит теоретически мы может получить доступ к любой единице памяти игры. <br>
<br>
Так и есть. <br>
<br>
<div class="mycode5">
<span class="general1-variable">$index</span> = <span class="general1-number">10 000 000 </span><br>
<span class="general1-variable">$10</span>(<span class="general1-variable">$index</span>,<span class="general1-number">1i</span>) = <span class="general1-number">1</span> </div>
<br>
Этот код запишет 1 в <span class="var">cA</span> = 40+10 000 000*4 = 40000040..3 байт. <br>
<br>
Вроде все верно. Одна есть одна деталь: игровой движок рассчитывает конечный адрес cA, исходя из того, что адресация происходит внутри SCM, а значит это смещение будет не абсолютным, а относительным (от начала main.scm в памяти игры). <br>
<br>
Так в чем проблема, спросите вы, нужно лишь учесть этот смещение и все. Да, так и есть. <br>
Глобальный адрес main.scm в памяти игры равен: 0xA49960. Именно это значение прибавляется для получения адреса. Поэтому отняв его от значения <span class="var">iN</span> и разделив число на 4 (смотри формулу) мы получим «магическое» значение <span class="var">iN</span>, которое и будет потом, при обработке его игрой указывать на нужную нам ячейку. <br>
<br>
Преобразуем формулу с учетом адреса SCM: <br>
<br>
<span class="var">cA = 0xA49960 + aN + (iN * t)</span> <br>
<br>
Из нее легко видно, что нужно сделать чтобы cA был равен нужному нам адресу. <br>
Есть последняя деталь. Чтобы не возиться с учетом <span class="var">aN</span>, мы устанавливаем его равным 0. Делается это при помощи aDMA, о чем я писал выше. <br>
<br>
Конечный код преобразования глобального адреса в «магическое» число: <br>
<br>
<div  class="imgcursor" align="right"><span class="kbd"><img src="img/ru/ico_cb.gif" alt="Copy to Clipboard" width="16" height="16"  onClick="ClipBoard1();"  ></span>
<TEXTAREA ID="holdtext1" STYLE="display:none;"></TEXTAREA></div>
<div class=mycode5>
<pre id="copytext1" class="NON">
<span class="general1-label">:MemoryRead32</span>
<span class="general1-variable">0@</span> -= <span class="general1-number">0xA49960 </span>
<span class="general1-variable">0@</span> /= <span class="general1-number">4 </span>
008B: <span class="general1-variable">1@</span> = <span class="general1-variable">&amp;0</span>(<span class="general1-variable">0@</span>,<span class="general1-number">1i</span>)
<span class="general1-reservedword">return </span></pre></div>

<br>
Эта функция возвращает в переменной <span class="general1-variable">1@</span> значение памяти по адресу, переданному в <span class="general1-variable">0@</span>. <br>
<br>
Например, есть адрес <span class="general1-number">0xB7CE50</span> – текущее количество денег игрока ( <a href="http://www.gtamodding.com/index.php?title=Memory_Addresses_%28SA%29" target="_blank">другие адреса </a>) <br>
<br>
Прочитаем сколько денег на счету у игрока: <br>
<br>
<div  class="imgcursor" align="right"><span class="kbd"><img src="img/ru/ico_cb.gif" alt="Copy to Clipboard" width="16" height="16"  onClick="ClipBoard2();"  ></span>
<TEXTAREA ID="holdtext2" STYLE="display:none;"></TEXTAREA></div>
<div class=mycode5>
<pre id="copytext2" class="NON">
…
<span class="general1-variable">0@</span> = <span class="general1-number">0xB7CE50 </span>
<span class="general1-reservedword">gosub</span> <span class="general1-label">@MemoryRead32</span>
054C: use_GXT_table <span class="general1-string">'POOL'</span>
01E3: text_1number_styled <span class="general1-string">'NUM'</span> <span class="general1-variable">1@</span> <span class="general1-number">5000</span> ms <span class="general1-number">1</span> <span class="general1-comment">// ~1~</span>

...

<span class="general1-label">:MemoryRead32</span>
<span class="general1-variable">0@ </span>-= <span class="general1-number">0xA49960</span>
<span class="general1-variable">0@</span> /= <span class="general1-number">4 </span>
008B: <span class="general1-variable">1@</span> = <span class="general1-variable">&amp;0</span>(<span class="general1-variable">0@</span>,<span class="general1-number">1i</span>)
<span class="general1-reservedword">return</span></pre>
</div>

<p><br>
  Код для записи в память разных значений вы можете прочитать в <a href="http://www.gtaforums.com/index.php?showtopic=257379&view=findpost&p=3920560" target="_blank">моем посте на GTAForums.com </a>. <br>
  <br>
  И напоследок. <br>
  Не все адреса одинаково полезны.. тьфу, доступны. При попытке изменить/прочитать некоторые из них вы можете получить ошибку с вылетом игры. Будьте осторожны.			</p>
<p>См. также <a href="Cleo.htm">библиотека CLEO 3 </a></p></TD>
          <TD width=5
        background="rtd.gif"></TD></TR>
        </TBODY></TABLE>
      <TABLE cellSpacing=0 cellPadding=0 width="100%">
        <TBODY>
        <TR>
          <TD width=5><IMG height=20
            src="img/ru/mtdlbot.png" width=5 border=0></TD>
          <TD align=left
            background="mtdbgbot.png"></TD>
          <TD class=ninfo align=right
          background="mtdbgbot.png">&nbsp;
            </TD>
          <TD width=5><IMG height=20
            src="img/ru/mtdrbot.png" width=5
        border=0></TD></TR></TBODY></TABLE></DIV>
</TD></TR><td width="100%"></TBODY></TABLE>
</TABLE></body></html>
