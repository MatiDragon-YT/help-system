<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">

<HTML><HEAD><TITLE>Arrays</TITLE>
<link rel="stylesheet" type="text/css" href="style/style.css">
<script language="javascript" type="text/javascript" src="img/en/clipboard.js"></script>

</HEAD>
<BODY topMargin=0 >
<TABLE
style="BORDER-RIGHT: medium none; BORDER-TOP: medium none; BORDER-LEFT: medium none; BORDER-BOTTOM: #c0c0c0 1px solid"
height=121 cellSpacing=0 cellPadding=0 width=640>
  <TBODY>
  <TR>
    <TD vAlign=top width="100%"><IMG
      src="img/en/logo2.jpg" width="640" height="121" border=0 class="conthdr" ></TD>
  </TR></TBODY></TABLE>
<TABLE cellSpacing=0 cellPadding=0 width=640 border=0>
  <TBODY>

  <TD width="100%" height="100%" vAlign=top>
   <DIV><IMG
      src="img/en/old/coding/articles.png" width="640" height="33"></DIV>


      <TABLE cellSpacing=0 cellPadding=0 width="100%">
        <TBODY>
        <TR>
          <TD width=5><IMG height=36
            src="img/en/mtdl.png" width=5></TD>
          <TD class=ntitle vAlign=top
          background="mtdbg.png" height=36>Arrays</TD>
          <TD width=5><IMG height=36
            src="img/en/mtdr.png"
      width=20></TD></TR></TBODY></TABLE>
      <TABLE cellSpacing=0 cellPadding=0 width="100%">
        <TBODY>
        <TR>
          <TD width=5 background="ltd.gif"></TD>
          <TD class=news vAlign=top><p>
An array represents an indexed collection of elements of the same
	type (called the base type). You can work with any element directly
	via its	index. An index numeration begins with a zero.<br>
	These arrays are supported by SA and LCS, VCS.<br>
	<br>

	Syntax:</p>
<p>
	San Andreas:<br>
<strong>&lt;array name&gt;(&lt;index var name&gt;,&lt;size&gt;&lt;type&gt;)</strong></p><p>
	Liberty City Stories, Vice City Stories:<br>
<strong>&lt;array name&gt;(&lt;index var name&gt;,&lt;size&gt;)</strong></p>
<p>
<strong>&lt;array name&gt;:</strong> local or global variable.</p><p><strong>
	<a name="Index"></a>&lt;index var name&gt;</strong>: any variable containing an index value.<br>
	<a name="size"></a><br>
<strong>
	&lt;size&gt;</strong>: any value greater than 0.<br>
	<a name="type"></a><br>
<strong>
	&lt;type&gt;</strong>: chars i f s v denote one of the array types:<br><br>
<strong>
	i:</strong> integer 4 bytes<br>
<strong>f:</strong> float,  4 bytes<br>
<strong>s:</strong> shortstring, 8 bytes<br>
<strong>v:</strong> longstring, 16 bytes<br>
</p>
<p>In LCS, VCS, the array elements are only 4 bytes in length.&nbsp; Therefore, there is no need for  declaring its type.<br><br>

	An array could contain the elements of same type only.<br><br>

	Example:</p>
<div  class="imgcursor" align="right"><span class="kbd"><img src="img/en/ico_cb.gif" alt="Copy to Clipboard" width="16" height="16"  onClick="ClipBoard();"  ></span>
<TEXTAREA ID="holdtext" STYLE="display:none;"></TEXTAREA></div>
<div class=mycode5>
<pre id="copytext" class="NON"><span class="general1-variable">$index</span> = <span class="general1-number">0</span>
<span class="general1-variable">$array</span>(<span class="general1-variable">$index</span>,<span class="general1-number">10i</span>) = <span class="general1-number">1</span></pre></div>
<p>Sanny Builder can work with the arrays in  two easier ways:</p>
<p>	<a name="VAR_END" id="VAR_END">1)</a> declare an array using VAR..END construct</p><p>	The following syntax is used:</p><br>
<div class=mycode5>	<span class="general1-reservedword">var</span><br>
	 &lt;array name&gt;: array &lt;size&gt; of &lt;type&gt;<br>
	 <span class="general1-reservedword">end</span></div>
<br>
	<br>
	e.g.:<br>
<br><div  class="imgcursor" align="right"><span class="kbd"><img src="img/en/ico_cb.gif" alt="Copy to Clipboard" width="16" height="16"  onClick="ClipBoard1();"  ></span>
<TEXTAREA ID="holdtext1" STYLE="display:none;"></TEXTAREA></div>
<div class=mycode5>
<pre id="copytext1" class="NON"><span class="general1-reservedword">var</span>
<span class="general1-variable">$FloatArray</span>: array <span class="general1-number">10</span> of Float
<span class="general1-reservedword">end</span></pre></div>
<p>You can operate this array without specifying its type and size:</p>
<div  class="imgcursor" align="right"><span class="kbd"><img src="img/en/ico_cb.gif" alt="Copy to Clipboard" width="16" height="16"  onClick="ClipBoard2();"  ></span>
<TEXTAREA ID="holdtext2" STYLE="display:none;"></TEXTAREA></div>
<div class=mycode5>
<pre id="copytext2" class="NON"><span class="general1-variable">$FloatArray</span>[<span class="general1-variable">$RndIndex</span>] += <span class="general1-number">100.0</span></pre></div>
<p>	2) use a constant number as an index</p>
<p>
	For instance, you have the array $strings, containing 10 elements of
	type s. You can use a constant number to work with the specified element:</p>

<div  class="imgcursor" align="right"><span class="kbd"><img src="img/en/ico_cb.gif" alt="Copy to Clipboard" width="16" height="16"  onClick="ClipBoard3();"  ></span>
<TEXTAREA ID="holdtext3" STYLE="display:none;"></TEXTAREA></div>
<div class=mycode5>
<pre id="copytext3" class="NON"><span class="general1-variable">s$strings</span>[<span class="general1-number">0</span>] =<span class="general1-string"> 'str1'</span>
<span class="general1-variable">s$strings</span>[<span class="general1-number">1</span>] = <span class="general1-string">'str2'</span>
	...
<span class="general1-variable">s$strings</span>[<span class="general1-number">9</span>] = <span class="general1-string">'str10'</span></pre></div>
<p>	These variables could be used as the class name when declared:</p>
<div  class="imgcursor" align="right"><span class="kbd"><img src="img/en/ico_cb.gif" alt="Copy to Clipboard" width="16" height="16"  onClick="ClipBoard4();"  ></span>
<TEXTAREA ID="holdtext4" STYLE="display:none;"></TEXTAREA></div>
<div class=mycode5>
<pre id="copytext4" class="NON"><span class="general1-variable">$players</span>[<span class="general1-number">0</span>].<span class="general1-command">Build</span></pre></div>
<p>By default in SA mode, the array elements decompile with the number of indexes. You can turn this feature off through the <a href="console.htm">Console</a> using the command
	toggle constant_indexes off.
	The possibility of decompiling with the number of  indexes is allowed in LCS, VCS but is disabled by default.&nbsp; You can enable this  through the Console. </p>          </TD>
          <TD width=5
        background="rtd.gif"></TD></TR></TBODY></TABLE>
      <TABLE cellSpacing=0 cellPadding=0 width="100%">
        <TBODY>
        <TR>
          <TD width=5><IMG height=20
            src="img/en/mtdlbot.png" width=5 border=0></TD>
          <TD align=left
            background="mtdbgbot.png"> </TD>
          <TD class=ninfo align=right
          background="mtdbgbot.png">&nbsp;
            </TD>
          <TD width=5><IMG height=20
            src="img/en/mtdrbot.png" width=5
        border=0></TD></TR></TBODY></TABLE></DIV>
</TD></TR><td width="100%"></TBODY></TABLE>
</TABLE></body></html>
